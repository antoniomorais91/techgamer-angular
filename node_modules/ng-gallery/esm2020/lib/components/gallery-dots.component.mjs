import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/gallery.service";
import * as i2 from "@angular/common";
export class GalleryDotsComponent {
    constructor(gallery) {
        this.gallery = gallery;
    }
}
GalleryDotsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.0", ngImport: i0, type: GalleryDotsComponent, deps: [{ token: i1.Gallery }], target: i0.ɵɵFactoryTarget.Component });
GalleryDotsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.1.0", type: GalleryDotsComponent, selector: "gallery-dots", inputs: { galleryId: "galleryId", state: "state", config: "config" }, ngImport: i0, template: `
    <div class="g-dot"
         *ngFor="let item of state.items; let i = index"
         [class.g-dot-active]="i === state.currIndex"
         [style.width.px]="config?.dotsSize"
         [style.height.px]="config?.dotsSize"
         (click)="gallery.ref(this.galleryId).set(i)">
      <div class="g-dot-inner"></div>
    </div>
  `, isInline: true, dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.0", ngImport: i0, type: GalleryDotsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'gallery-dots',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `
    <div class="g-dot"
         *ngFor="let item of state.items; let i = index"
         [class.g-dot-active]="i === state.currIndex"
         [style.width.px]="config?.dotsSize"
         [style.height.px]="config?.dotsSize"
         (click)="gallery.ref(this.galleryId).set(i)">
      <div class="g-dot-inner"></div>
    </div>
  `
                }]
        }], ctorParameters: function () { return [{ type: i1.Gallery }]; }, propDecorators: { galleryId: [{
                type: Input
            }], state: [{
                type: Input
            }], config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1kb3RzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWdhbGxlcnkvc3JjL2xpYi9jb21wb25lbnRzL2dhbGxlcnktZG90cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFtQjFFLE1BQU0sT0FBTyxvQkFBb0I7SUFLL0IsWUFBbUIsT0FBZ0I7UUFBaEIsWUFBTyxHQUFQLE9BQU8sQ0FBUztJQUNuQyxDQUFDOztpSEFOVSxvQkFBb0I7cUdBQXBCLG9CQUFvQiwwSEFYckI7Ozs7Ozs7OztHQVNUOzJGQUVVLG9CQUFvQjtrQkFkaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFFBQVEsRUFBRTs7Ozs7Ozs7O0dBU1Q7aUJBQ0Y7OEZBRVUsU0FBUztzQkFBakIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdhbGxlcnkgfSBmcm9tICcuLi9zZXJ2aWNlcy9nYWxsZXJ5LnNlcnZpY2UnO1xuaW1wb3J0IHsgR2FsbGVyeVN0YXRlIH0gZnJvbSAnLi4vbW9kZWxzL2dhbGxlcnkubW9kZWwnO1xuaW1wb3J0IHsgR2FsbGVyeUNvbmZpZyB9IGZyb20gJy4uL21vZGVscy9jb25maWcubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdnYWxsZXJ5LWRvdHMnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiZy1kb3RcIlxuICAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2Ygc3RhdGUuaXRlbXM7IGxldCBpID0gaW5kZXhcIlxuICAgICAgICAgW2NsYXNzLmctZG90LWFjdGl2ZV09XCJpID09PSBzdGF0ZS5jdXJySW5kZXhcIlxuICAgICAgICAgW3N0eWxlLndpZHRoLnB4XT1cImNvbmZpZz8uZG90c1NpemVcIlxuICAgICAgICAgW3N0eWxlLmhlaWdodC5weF09XCJjb25maWc/LmRvdHNTaXplXCJcbiAgICAgICAgIChjbGljayk9XCJnYWxsZXJ5LnJlZih0aGlzLmdhbGxlcnlJZCkuc2V0KGkpXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZy1kb3QtaW5uZXJcIj48L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5RG90c0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGdhbGxlcnlJZDogc3RyaW5nO1xuICBASW5wdXQoKSBzdGF0ZTogR2FsbGVyeVN0YXRlO1xuICBASW5wdXQoKSBjb25maWc6IEdhbGxlcnlDb25maWc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGdhbGxlcnk6IEdhbGxlcnkpIHtcbiAgfVxufVxuIl19