import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./templates/gallery-image.component";
export class GalleryThumbComponent {
    constructor() {
        this.error = new EventEmitter();
    }
    get isActive() {
        return this.index === this.currIndex;
    }
}
GalleryThumbComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.0", ngImport: i0, type: GalleryThumbComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
GalleryThumbComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.1.0", type: GalleryThumbComponent, selector: "gallery-thumb", inputs: { config: "config", index: "index", currIndex: "currIndex", type: "type", data: "data" }, outputs: { error: "error" }, host: { properties: { "class.g-active-thumb": "this.isActive" } }, ngImport: i0, template: `
    <gallery-image [src]="data.thumb"
                   [alt]="data.alt + '-thumbnail'"
                   [isThumbnail]="true"
                   [loadingIcon]="config.thumbLoadingIcon"
                   [loadingError]="config.thumbLoadingError"
                   (error)="error.emit($event)"></gallery-image>

    <div *ngIf="config.thumbTemplate" class="g-template g-thumb-template">
      <ng-container
        *ngTemplateOutlet="config.thumbTemplate; context: { index, type, data, isActive }">
      </ng-container>
    </div>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.GalleryImageComponent, selector: "gallery-image", inputs: ["isThumbnail", "loadingAttr", "alt", "src", "loadingIcon", "loadingError", "errorIcon"], outputs: ["error", "loaded"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.0", ngImport: i0, type: GalleryThumbComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'gallery-thumb',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `
    <gallery-image [src]="data.thumb"
                   [alt]="data.alt + '-thumbnail'"
                   [isThumbnail]="true"
                   [loadingIcon]="config.thumbLoadingIcon"
                   [loadingError]="config.thumbLoadingError"
                   (error)="error.emit($event)"></gallery-image>

    <div *ngIf="config.thumbTemplate" class="g-template g-thumb-template">
      <ng-container
        *ngTemplateOutlet="config.thumbTemplate; context: { index, type, data, isActive }">
      </ng-container>
    </div>
  `
                }]
        }], propDecorators: { config: [{
                type: Input
            }], index: [{
                type: Input
            }], currIndex: [{
                type: Input
            }], type: [{
                type: Input
            }], data: [{
                type: Input
            }], error: [{
                type: Output
            }], isActive: [{
                type: HostBinding,
                args: ['class.g-active-thumb']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS10aHVtYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1nYWxsZXJ5L3NyYy9saWIvY29tcG9uZW50cy9nYWxsZXJ5LXRodW1iLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQXFCN0csTUFBTSxPQUFPLHFCQUFxQjtJQWxCbEM7UUFrQ1ksVUFBSyxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7S0FNbEQ7SUFKQyxJQUF5QyxRQUFRO1FBQy9DLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3ZDLENBQUM7O2tIQXBCVSxxQkFBcUI7c0dBQXJCLHFCQUFxQix1UEFmdEI7Ozs7Ozs7Ozs7Ozs7R0FhVDsyRkFFVSxxQkFBcUI7a0JBbEJqQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7O0dBYVQ7aUJBQ0Y7OEJBR1UsTUFBTTtzQkFBZCxLQUFLO2dCQUdHLEtBQUs7c0JBQWIsS0FBSztnQkFHRyxTQUFTO3NCQUFqQixLQUFLO2dCQUdHLElBQUk7c0JBQVosS0FBSztnQkFHRyxJQUFJO3NCQUFaLEtBQUs7Z0JBRUksS0FBSztzQkFBZCxNQUFNO2dCQUVrQyxRQUFRO3NCQUFoRCxXQUFXO3VCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBIb3N0QmluZGluZywgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdhbGxlcnlDb25maWcgfSBmcm9tICcuLi9tb2RlbHMvY29uZmlnLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZ2FsbGVyeS10aHVtYicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxnYWxsZXJ5LWltYWdlIFtzcmNdPVwiZGF0YS50aHVtYlwiXG4gICAgICAgICAgICAgICAgICAgW2FsdF09XCJkYXRhLmFsdCArICctdGh1bWJuYWlsJ1wiXG4gICAgICAgICAgICAgICAgICAgW2lzVGh1bWJuYWlsXT1cInRydWVcIlxuICAgICAgICAgICAgICAgICAgIFtsb2FkaW5nSWNvbl09XCJjb25maWcudGh1bWJMb2FkaW5nSWNvblwiXG4gICAgICAgICAgICAgICAgICAgW2xvYWRpbmdFcnJvcl09XCJjb25maWcudGh1bWJMb2FkaW5nRXJyb3JcIlxuICAgICAgICAgICAgICAgICAgIChlcnJvcik9XCJlcnJvci5lbWl0KCRldmVudClcIj48L2dhbGxlcnktaW1hZ2U+XG5cbiAgICA8ZGl2ICpuZ0lmPVwiY29uZmlnLnRodW1iVGVtcGxhdGVcIiBjbGFzcz1cImctdGVtcGxhdGUgZy10aHVtYi10ZW1wbGF0ZVwiPlxuICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAqbmdUZW1wbGF0ZU91dGxldD1cImNvbmZpZy50aHVtYlRlbXBsYXRlOyBjb250ZXh0OiB7IGluZGV4LCB0eXBlLCBkYXRhLCBpc0FjdGl2ZSB9XCI+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L2Rpdj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5VGh1bWJDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGNvbmZpZzogR2FsbGVyeUNvbmZpZztcblxuICAvKiogSXRlbSdzIGluZGV4IGluIHRoZSBnYWxsZXJ5ICovXG4gIEBJbnB1dCgpIGluZGV4OiBudW1iZXI7XG5cbiAgLyoqIEdhbGxlcnkgY3VycmVudCBpbmRleCAqL1xuICBASW5wdXQoKSBjdXJySW5kZXg6IG51bWJlcjtcblxuICAvKiogSXRlbSdzIHR5cGUgJ2ltYWdlJywgJ3ZpZGVvJywgJ3lvdXR1YmUnLCAnaWZyYW1lJyAqL1xuICBASW5wdXQoKSB0eXBlOiBzdHJpbmc7XG5cbiAgLyoqIEl0ZW0ncyBkYXRhLCB0aGlzIG9iamVjdCBjb250YWlucyB0aGUgZGF0YSByZXF1aXJlZCB0byBkaXNwbGF5IHRoZSBjb250ZW50IChlLmcuIHNyYyBwYXRoKSAqL1xuICBASW5wdXQoKSBkYXRhOiBhbnk7XG5cbiAgQE91dHB1dCgpIGVycm9yID0gbmV3IEV2ZW50RW1pdHRlcjxFcnJvckV2ZW50PigpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZy1hY3RpdmUtdGh1bWInKSBnZXQgaXNBY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5kZXggPT09IHRoaXMuY3VyckluZGV4O1xuICB9XG5cbn1cbiJdfQ==