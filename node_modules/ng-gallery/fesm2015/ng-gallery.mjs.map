{"version":3,"file":"ng-gallery.mjs","sources":["../../../projects/ng-gallery/src/lib/models/constants.ts","../../../projects/ng-gallery/src/lib/utils/gallery.default.ts","../../../projects/ng-gallery/src/lib/components/templates/items.model.ts","../../../projects/ng-gallery/src/lib/services/gallery-ref.ts","../../../projects/ng-gallery/src/lib/models/config.model.ts","../../../projects/ng-gallery/src/lib/services/gallery.service.ts","../../../projects/ng-gallery/src/lib/components/gallery-nav.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-dots.component.ts","../../../projects/ng-gallery/src/lib/components/adapters/base-adapter.ts","../../../projects/ng-gallery/src/lib/components/adapters/common-adapter.ts","../../../projects/ng-gallery/src/lib/components/adapters/thumb-adapters.ts","../../../projects/ng-gallery/src/lib/components/adapters/main-adapters.ts","../../../projects/ng-gallery/src/lib/utils/resize-observer.ts","../../../projects/ng-gallery/src/lib/components/templates/svg-assets.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-image.component.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-video.component.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-iframe.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-item.component.ts","../../../projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll.model.ts","../../../projects/ng-gallery/src/lib/smooth-scroll/smooth-scroll-manager.ts","../../../projects/ng-gallery/src/lib/components/gallery-slider.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-counter.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-thumb.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-thumbs.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-core.component.ts","../../../projects/ng-gallery/src/lib/components/gallery.component.ts","../../../projects/ng-gallery/src/lib/gallery.module.ts","../../../projects/ng-gallery/src/ng-gallery.ts"],"sourcesContent":["export enum GalleryAction {\n  INITIALIZED = 'initialized',\n  ITEMS_CHANGED = 'itemsChanged',\n  INDEX_CHANGED = 'indexChanged',\n  PLAY = 'play',\n  STOP = 'stop'\n}\n\nexport enum ImageSize {\n  Cover = 'cover',\n  Contain = 'contain'\n}\n\nexport enum LoadingStrategy {\n  Preload = 'preload',\n  Lazy = 'lazy',\n  Default = 'default'\n}\n\nexport enum LoadingAttr {\n  Eager= 'eager',\n  Lazy = 'lazy'\n}\n\nexport enum ThumbnailsPosition {\n  Top = 'top',\n  Left = 'left',\n  Right = 'right',\n  Bottom = 'bottom'\n}\n\nexport enum DotsPosition {\n  Top = 'top',\n  Bottom = 'bottom'\n}\n\nexport enum CounterPosition {\n  Top = 'top',\n  Bottom = 'bottom'\n}\n\nexport enum SlidingDirection {\n  Horizontal = 'horizontal',\n  Vertical = 'vertical'\n}\n\nexport enum GalleryItemType {\n  Image = 'image',\n  Video = 'video',\n  Youtube = 'youtube',\n  Iframe = 'iframe'\n}\n\nexport enum ThumbnailsView {\n  Default = 'default',\n  Contain = 'contain',\n}\n","import {\n  ImageSize,\n  GalleryAction,\n  LoadingStrategy,\n  SlidingDirection,\n  ThumbnailsPosition,\n  DotsPosition,\n  CounterPosition,\n  ThumbnailsView,\n  LoadingAttr\n} from '../models/constants';\nimport { GalleryState } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\n\n/** Initial state */\nexport const defaultState: GalleryState = {\n  action: GalleryAction.INITIALIZED,\n  isPlaying: false,\n  hasNext: false,\n  hasPrev: false,\n  currIndex: 0,\n  items: []\n};\n\nexport const defaultConfig: GalleryConfig = {\n  nav: true,\n  loop: true,\n  dots: false,\n  thumb: true,\n  debug: false,\n  dotsSize: 6,\n  counter: true,\n  autoPlay: false,\n  thumbWidth: 120,\n  thumbHeight: 90,\n  disableThumb: false,\n  slidingDisabled: false,\n  thumbSlidingDisabled: false,\n  mouseSlidingDisabled: false,\n  thumbMouseSlidingDisabled: false,\n  playerInterval: 3000,\n  slidingDuration: 468,\n  slidingEase: {\n    x1: 0.42,\n    y1: 0,\n    x2: 0.58,\n    y2: 1\n  },\n  thumbAutosize: false,\n  itemAutosize: false,\n  autoHeight: false,\n  scrollBehavior: 'smooth',\n  navScrollBehavior: 'smooth',\n  resizeDebounceTime: 50,\n  loadingAttr: LoadingAttr.Lazy,\n  imageSize: ImageSize.Contain,\n  thumbImageSize: ImageSize.Cover,\n  thumbView: ThumbnailsView.Default,\n  dotsPosition: DotsPosition.Bottom,\n  counterPosition: CounterPosition.Top,\n  thumbPosition: ThumbnailsPosition.Bottom,\n  loadingStrategy: LoadingStrategy.Preload,\n  slidingDirection: SlidingDirection.Horizontal,\n  navIcon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256C0 397.4 114.6 512 256 512s256-114.6 256-256S397.4 0 256 0S0 114.6 0 256zM241 377c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l87-87-87-87c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L345 239c9.4 9.4 9.4 24.6 0 33.9L241 377z\"/></svg>`,\n  // navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\"></svg>`,\n  loadingIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg stroke=\"#fff\" viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>`\n};\n","import { GalleryItem } from '../../models/gallery.model';\nimport { GalleryItemType } from '../../models/constants';\n\nexport class ImageItem implements GalleryItem {\n  readonly type: string;\n  readonly data: ImageItemData;\n\n  constructor(data: ImageItemData) {\n    this.data = data;\n    this.type = GalleryItemType.Image;\n  }\n}\n\nexport class VideoItem implements GalleryItem {\n  readonly type: string;\n  readonly data: VideoItemData;\n\n  constructor(data: VideoItemData) {\n    this.data = data;\n    this.type = GalleryItemType.Video;\n  }\n}\n\nexport class IframeItem implements GalleryItem {\n  readonly type: string;\n  readonly data: IframeItemData;\n\n  constructor(data: IframeItemData) {\n    this.data = data;\n    this.type = GalleryItemType.Iframe;\n  }\n}\n\nexport class YoutubeItem implements GalleryItem {\n  readonly type: string;\n  readonly data: YoutubeItemData;\n\n  constructor(data: YoutubeItemData) {\n    this.data = {\n      ...data,\n      ...{\n        src: `https://youtube.com/embed/${ data.src }`,\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\n      }\n    };\n    this.type = GalleryItemType.Youtube;\n  }\n}\n\ntype GalleryItemModel = {\n  type?: string;\n  src?: string;\n  thumb?: string;\n};\n\nexport type ImageItemData = GalleryItemModel & {\n  alt?: string;\n};\n\nexport type IframeItemData = GalleryItemModel & {\n  params?: any;\n};\n\nexport type YoutubeItemData = IframeItemData & {\n  autoplay?: boolean;\n};\n\nexport type VideoItemData = GalleryItemModel & {\n  src?: string | { url: string, type: string }[];\n  thumb?: string;\n  poster?: string;\n  loop?: boolean;\n  // The only option for boolean video attributes is 'true', because false will still be evaluated to true in attributes binding\n  mute?: true;\n  disablePictureInPicture?: true;\n  controls?: boolean;\n  autoplay?: boolean;\n  preload?: 'none' | 'metadata' | 'auto' | '';\n  controlsList?: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\n  disableRemotePlayback?: boolean;\n};\n\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\n","import { BehaviorSubject, Subject, Observable, of, EMPTY } from 'rxjs';\nimport { delay, filter, switchMap, tap } from 'rxjs/operators';\nimport { defaultState } from '../utils/gallery.default';\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\nimport { GalleryAction } from '../models/constants';\nimport {\n  IframeItem,\n  IframeItemData,\n  ImageItem,\n  ImageItemData,\n  VideoItem,\n  VideoItemData,\n  YoutubeItem,\n  YoutubeItemData\n} from '../components/templates/items.model';\n\nconst filterActions = (actions: string[]) => {\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\n};\n\nexport class GalleryRef {\n\n  /** Stream that emits gallery state */\n  private readonly _state: BehaviorSubject<GalleryState>;\n\n  /** Stream that emits gallery config */\n  private readonly _config: BehaviorSubject<GalleryConfig>;\n\n  /** Stream that emits on item click */\n  readonly itemClick = new Subject<number>();\n\n  /** Stream that emits on thumbnail click */\n  readonly thumbClick = new Subject<number>();\n\n  /** Stream that emits on an error occurs */\n  readonly error = new Subject<GalleryError>();\n\n  /** Gallery Events */\n\n  /** Stream that emits gallery state */\n  readonly state: Observable<GalleryState>;\n\n  /** Stream that emits gallery config */\n  readonly config: Observable<GalleryConfig>;\n\n  get stateSnapshot(): GalleryState {\n    return this._state.value;\n  }\n\n  get configSnapshot(): GalleryConfig {\n    return this._config.value;\n  }\n\n  /** Stream that emits when gallery is initialized/reset */\n  get initialized(): Observable<GalleryState> {\n    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));\n  }\n\n  /** Stream that emits when items is changed (items loaded, item added, item removed) */\n  get itemsChanged(): Observable<GalleryState> {\n    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));\n  }\n\n  /** Stream that emits when current item is changed */\n  get indexChanged(): Observable<GalleryState> {\n    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));\n  }\n\n  /** Stream that emits when the player should start or stop */\n  get playingChanged(): Observable<GalleryState> {\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));\n  }\n\n  /** Stream that emits when the player should start or stop */\n  private get playerActions(): Observable<GalleryState> {\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP, GalleryAction.INDEX_CHANGED]));\n  }\n\n  constructor(config: GalleryConfig, private deleteInstance: () => void) {\n    this._state = new BehaviorSubject<GalleryState>(defaultState);\n    this._config = new BehaviorSubject<GalleryConfig>(config);\n    this.state = this._state.asObservable();\n    this.config = this._config.asObservable();\n  }\n\n  /**\n   * Activate player actions listener\n   */\n  activatePlayer(): Observable<GalleryState> {\n    return this.playerActions.pipe(\n      switchMap((e: GalleryState) =>\n        e.isPlaying ? of({}).pipe(\n          delay(this._config.value.playerInterval),\n          tap(() => this.next(this._config.value.scrollBehavior))\n        ) : EMPTY\n      )\n    );\n  }\n\n  /**\n   * Set gallery state\n   */\n  private setState(state: GalleryState): void {\n    this._state.next({ ...this.stateSnapshot, ...state });\n  }\n\n  /**\n   * Set gallery config\n   */\n  setConfig(config: GalleryConfig): void {\n    this._config.next({ ...this._config.value, ...config });\n  }\n\n  /**\n   * Add gallery item\n   */\n  add(item: GalleryItem, active?: boolean): void {\n    const items: GalleryItem[] = [...this.stateSnapshot.items, item];\n    this.setState({\n      action: GalleryAction.ITEMS_CHANGED,\n      items,\n      hasNext: items.length > 1,\n      currIndex: active ? items.length - 1 : this.stateSnapshot.currIndex\n    });\n  }\n\n  /**\n   * Add image item\n   */\n  addImage(data: ImageItemData, active?: boolean): void {\n    this.add(new ImageItem(data), active);\n  }\n\n  /**\n   * Add video item\n   */\n  addVideo(data: VideoItemData, active?: boolean): void {\n    this.add(new VideoItem(data), active);\n  }\n\n  /**\n   * Add iframe item\n   */\n  addIframe(data: IframeItemData, active?: boolean): void {\n    this.add(new IframeItem(data), active);\n  }\n\n  /**\n   * Add youtube item\n   */\n  addYoutube(data: YoutubeItemData, active?: boolean): void {\n    this.add(new YoutubeItem(data), active);\n  }\n\n  /**\n   * Remove gallery item\n   */\n  remove(i: number): void {\n    const state: GalleryState = this.stateSnapshot;\n    const items: GalleryItem[] = [\n      ...state.items.slice(0, i),\n      ...state.items.slice(i + 1, state.items.length)\n    ];\n    this.setState({\n      action: GalleryAction.ITEMS_CHANGED,\n      currIndex: i < 1 ? state.currIndex : i - 1,\n      items,\n      hasNext: items.length > 1,\n      hasPrev: i > 0\n    });\n  }\n\n  /**\n   * Load items and reset the state\n   */\n  load(items: GalleryItem[]): void {\n    if (items) {\n      this.setState({\n        action: GalleryAction.ITEMS_CHANGED,\n        items,\n        hasNext: items.length > 1,\n        hasPrev: false\n      });\n    }\n  }\n\n  /**\n   * Set active item\n   */\n  set(i: number, behavior: ScrollBehavior = this._config.value.scrollBehavior): void {\n    if (i < 0 || i >= this.stateSnapshot.items.length) {\n      console.error(`[NgGallery]: Unable to set the active item because the given index (${ i }) is outside the items range!`);\n      return;\n    }\n    if (i !== this.stateSnapshot.currIndex) {\n      this.setState({\n        behavior,\n        action: GalleryAction.INDEX_CHANGED,\n        currIndex: i,\n        hasNext: i < this.stateSnapshot.items.length - 1,\n        hasPrev: i > 0\n      });\n    }\n  }\n\n  /**\n   * Next item\n   */\n  next(behavior: ScrollBehavior = this._config.value.scrollBehavior, loop: boolean = true): void {\n    if (this.stateSnapshot.hasNext) {\n      this.set(this.stateSnapshot.currIndex + 1, behavior);\n    } else if (loop && this._config.value.loop) {\n      this.set(0, behavior);\n    }\n  }\n\n  /**\n   * Prev item\n   */\n  prev(behavior: ScrollBehavior = this._config.value.scrollBehavior, loop: boolean = true): void {\n    if (this.stateSnapshot.hasPrev) {\n      this.set(this.stateSnapshot.currIndex - 1, behavior);\n    } else if (loop && this._config.value.loop) {\n      this.set(this.stateSnapshot.items.length - 1, behavior);\n    }\n  }\n\n  /**\n   * Start gallery player\n   */\n  play(interval?: number): void {\n    if (interval) {\n      this.setConfig({ playerInterval: interval });\n    }\n    this.setState({ action: GalleryAction.PLAY, isPlaying: true });\n  }\n\n  /**\n   * Stop gallery player\n   */\n  stop(): void {\n    this.setState({ action: GalleryAction.STOP, isPlaying: false });\n  }\n\n  /**\n   * Reset gallery to initial state\n   */\n  reset(): void {\n    this.setState(defaultState);\n  }\n\n  /**\n   * Destroy gallery\n   */\n  destroy(): void {\n    this._state.complete();\n    this._config.complete();\n    this.itemClick.complete();\n    this.thumbClick.complete();\n    this.deleteInstance();\n  }\n\n}\n","import { InjectionToken, TemplateRef } from '@angular/core';\nimport { BezierEasingOptions } from '../smooth-scroll';\n\nexport const GALLERY_CONFIG = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\n\nexport interface GalleryConfig {\n  scrollBehavior?: ScrollBehavior;\n  navScrollBehavior?: ScrollBehavior;\n  nav?: boolean;\n  dots?: boolean;\n  loop?: boolean;\n  thumb?: boolean;\n  navIcon?: string;\n  counter?: boolean;\n  dotsSize?: number;\n  autoPlay?: boolean;\n  thumbWidth?: number;\n  thumbHeight?: number;\n  loadingIcon?: string;\n  loadingError?: string;\n  thumbLoadingIcon?: string;\n  thumbLoadingError?: string;\n  disableThumb?: boolean;\n  slidingDuration?: number;\n  slidingEase?: BezierEasingOptions;\n  slidingDisabled?: boolean;\n  thumbSlidingDisabled?: boolean;\n  mouseSlidingDisabled?: boolean;\n  thumbMouseSlidingDisabled?: boolean;\n  resizeDebounceTime?: number;\n  playerInterval?: number;\n  boxTemplate?: TemplateRef<any>;\n  itemTemplate?: TemplateRef<any>;\n  thumbTemplate?: TemplateRef<any>;\n  thumbDetached?: boolean;\n  imageSize?: 'cover' | 'contain';\n  thumbImageSize?: 'cover' | 'contain';\n  dotsPosition?: 'top' | 'bottom';\n  counterPosition?: 'top' | 'bottom';\n  slidingDirection?: 'horizontal' | 'vertical';\n  loadingStrategy?: 'preload' | 'lazy' | 'default';\n  loadingAttr?: 'eager' | 'lazy';\n  thumbPosition?: 'top' | 'left' | 'right' | 'bottom';\n  thumbView?: 'default' | 'contain';\n  thumbAutosize?: boolean;\n  itemAutosize?: boolean;\n  autoHeight?: boolean;\n  debug?: boolean;\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\n\nimport { GalleryRef } from './gallery-ref';\nimport { GalleryConfig, GALLERY_CONFIG } from '../models/config.model';\nimport { defaultConfig } from '../utils/gallery.default';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Gallery {\n\n  /** Store gallery instances */\n  private readonly _instances = new Map<string, GalleryRef>();\n\n  /** Global config */\n  config: GalleryConfig;\n\n  constructor(@Optional() @Inject(GALLERY_CONFIG) config: GalleryConfig) {\n    this.config = config ? { ...defaultConfig, ...config } : defaultConfig;\n  }\n\n  /**\n   * Get or create gallery by ID\n   * @param id\n   * @param config\n   */\n  ref(id = 'root', config?: GalleryConfig): GalleryRef {\n    if (this._instances.has(id)) {\n      const galleryRef = this._instances.get(id);\n      if (config) {\n        galleryRef.setConfig({ ...this.config, ...config });\n      }\n      return galleryRef;\n    } else {\n      return this._instances.set(id, new GalleryRef({ ...this.config, ...config }, this.deleteInstance(id))).get(id);\n    }\n  }\n\n  /**\n   * Destroy all gallery instances\n   */\n  destroyAll() {\n    this._instances.forEach((ref: GalleryRef) => ref.destroy());\n  }\n\n  /**\n   * Reset all gallery instances\n   */\n  resetAll() {\n    this._instances.forEach((ref: GalleryRef) => ref.reset());\n  }\n\n  /**\n   * Logger for debugging\n   */\n  debugConsole(...data: any[]): void {\n    if (this.config.debug) {\n      console.log(...data)\n    }\n  }\n\n  /**\n   * A destroyer function for each gallery instance\n   */\n  private deleteInstance(id: string) {\n    return () => {\n      if (this._instances.has(id)) {\n        this._instances.delete(id);\n      }\n    };\n  }\n\n}\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryState } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\n\n@Component({\n  selector: 'gallery-nav',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i *ngIf=\"config.loop || state.hasPrev\"\n       class=\"g-nav-prev\"\n       aria-label=\"Previous\"\n       role=\"button\"\n       (click)=\"gallery.ref(this.galleryId).prev(config.navScrollBehavior)\"\n       [innerHtml]=\"navIcon\"></i>\n\n    <i *ngIf=\"config.loop || state.hasNext\"\n       class=\"g-nav-next\"\n       aria-label=\"Next\"\n       role=\"button\"\n       (click)=\"gallery.ref(this.galleryId).next(config.navScrollBehavior)\"\n       [innerHtml]=\"navIcon\"></i>\n  `\n})\nexport class GalleryNavComponent implements OnInit {\n\n  navIcon: SafeHtml;\n  @Input() galleryId: string;\n  @Input() state: GalleryState;\n  @Input() config: GalleryConfig;\n\n  constructor(public gallery: Gallery, private _sanitizer: DomSanitizer) {\n  }\n\n  ngOnInit() {\n    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryState } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\n\n@Component({\n  selector: 'gallery-dots',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"g-dot\"\n         *ngFor=\"let item of state.items; let i = index\"\n         [class.g-dot-active]=\"i === state.currIndex\"\n         [style.width.px]=\"config?.dotsSize\"\n         [style.height.px]=\"config?.dotsSize\"\n         (click)=\"gallery.ref(this.galleryId).set(i)\">\n      <div class=\"g-dot-inner\"></div>\n    </div>\n  `\n})\nexport class GalleryDotsComponent {\n  @Input() galleryId: string;\n  @Input() state: GalleryState;\n  @Input() config: GalleryConfig;\n\n  constructor(public gallery: Gallery) {\n  }\n}\n","/**\n * A clone of HammerJs constants\n */\nexport const DIRECTION_LEFT = 2;\nexport const DIRECTION_RIGHT = 4;\nexport const DIRECTION_UP = 8;\nexport const DIRECTION_DOWN = 16;\n\nexport abstract class BaseSliderAdapter {\n\n  abstract scrollSnapType: string;\n\n  abstract panDirection: number;\n\n  abstract get scrollValue(): number;\n\n  abstract get clientSize(): number;\n\n  abstract get isContentLessThanContainer(): boolean;\n\n  abstract getPanValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions;\n\n  abstract getScrollToValue(el: Element, behavior: ScrollBehavior): ScrollToOptions;\n\n  abstract getCentralizerStartSize(): number;\n\n  abstract getCentralizerEndSize(): number;\n}\n\n\nexport abstract class ThumbSliderAdapter extends BaseSliderAdapter {\n\n  abstract get thumbSize(): number;\n}\n\n\nexport abstract class SliderAdapter extends BaseSliderAdapter {\n\n  abstract get measureIndex(): number;\n\n  abstract getClientSize(el: HTMLElement): number;\n\n  abstract getOffsetSize(el: HTMLElement): number;\n\n  abstract getPanDelta(e: any): number;\n\n  abstract getPanVelocity(e: any): number;\n}\n","import { DIRECTION_DOWN, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP } from './base-adapter';\nimport { GalleryConfig } from '../../models/config.model';\n\n/**\n * Common properties for both MainAdapter and ThumbAdapter\n */\n\nexport class HorizontalCommonAdapter {\n\n  readonly panDirection = DIRECTION_LEFT | DIRECTION_RIGHT;\n\n  readonly scrollSnapType: string = 'x mandatory';\n\n  get scrollValue(): number {\n    return this.slider.scrollLeft;\n  }\n\n  get clientSize(): number {\n    return this.slider.clientWidth;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n  }\n\n  getPanValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\n    return {\n      behavior,\n      left: value - e.deltaX\n    };\n  }\n}\n\nexport class VerticalCommonAdapter {\n\n  readonly scrollSnapType: string = 'y mandatory';\n\n  readonly panDirection = DIRECTION_UP | DIRECTION_DOWN;\n\n  get scrollValue(): number {\n    return this.slider.scrollTop;\n  }\n\n  get clientSize(): number {\n    return this.slider.clientHeight;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n  }\n\n  getPanValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions {\n    return {\n      behavior,\n      top: value - e.deltaY\n    };\n  }\n}\n","import { GalleryConfig } from '../../models/config.model';\nimport { ThumbnailsView } from '../../models/constants';\nimport { ThumbSliderAdapter } from './base-adapter';\nimport { HorizontalCommonAdapter, VerticalCommonAdapter } from './common-adapter';\nimport { SmoothScrollToOptions } from '../../smooth-scroll';\n\n\nexport class HorizontalThumbAdapter extends HorizontalCommonAdapter implements ThumbSliderAdapter {\n\n  get thumbSize(): number {\n    return this.config.thumbWidth;\n  }\n\n  get isContentLessThanContainer(): boolean {\n    return this.slider.clientWidth >= this.slider.firstElementChild.clientWidth;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n    super(slider, config);\n  }\n\n  getCentralisedScrollToValue(el: HTMLElement, behavior: ScrollBehavior, thumbView: 'default' | 'contain'): SmoothScrollToOptions {\n    let position: number = el.offsetLeft;\n    if (thumbView === ThumbnailsView.Default) {\n      position -= (this.clientSize / 2) - (el.clientWidth / 2);\n    }\n    return {\n      start: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollToOptions {\n    let position = el.offsetLeft - ((this.clientSize - el.clientWidth) / 2);\n    return {\n      start: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getCentralizerStartSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientWidth;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientWidth / 2);\n  }\n\n  getCentralizerEndSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientWidth;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientWidth / 2);\n  }\n}\n\nexport class VerticalThumbAdapter extends VerticalCommonAdapter implements ThumbSliderAdapter {\n\n  get thumbSize(): number {\n    return this.config.thumbHeight;\n  }\n\n  get isContentLessThanContainer(): boolean {\n    return this.slider.clientHeight >= this.slider.firstElementChild.clientHeight;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n    super(slider, config);\n  }\n\n  getCentralisedScrollToValue(el: HTMLElement, behavior: ScrollBehavior, thumbView: 'default' | 'contain'): SmoothScrollToOptions {\n    let position: number = el.offsetTop;\n    if (thumbView === ThumbnailsView.Default) {\n      position -= (this.clientSize / 2) - (el.clientHeight / 2);\n    }\n    return {\n      top: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollToOptions {\n    const position = el.offsetTop - ((this.clientSize - el.clientHeight) / 2);\n    return {\n      top: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getCentralizerStartSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientHeight / 2);\n  }\n\n  getCentralizerEndSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientHeight / 2);\n  }\n}\n","import { GalleryConfig } from '../../models/config.model';\nimport { SliderAdapter } from './base-adapter';\nimport { HorizontalCommonAdapter, VerticalCommonAdapter } from './common-adapter';\nimport { SmoothScrollToOptions } from '../../smooth-scroll';\n\nexport class HorizontalAdapter extends HorizontalCommonAdapter implements SliderAdapter {\n\n  get measureIndex(): number {\n    return this.slider.scrollLeft / this.slider.clientWidth;\n  }\n\n  get isContentLessThanContainer(): boolean {\n    return this.slider.clientWidth >= this.slider.firstElementChild.clientWidth;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n    super(slider, config);\n  }\n\n  getClientSize(el: HTMLElement): number {\n    return el.clientWidth;\n  }\n\n  getOffsetSize(el: HTMLElement): number {\n    return el.offsetLeft;\n  }\n\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollToOptions {\n    const position = el.offsetLeft - ((this.clientSize - el.clientWidth) / 2);\n    return {\n      start: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getPanDelta(e): number {\n    return e.deltaX;\n  }\n\n  getPanVelocity(e): number {\n    return e.velocityX;\n  }\n\n  getCentralizerStartSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientWidth;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientWidth / 2);\n  }\n\n  getCentralizerEndSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientWidth;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientWidth / 2);\n  }\n}\n\nexport class VerticalAdapter extends VerticalCommonAdapter implements SliderAdapter {\n\n  get measureIndex(): number {\n    return this.slider.scrollTop / this.slider.clientHeight;\n  }\n\n  get isContentLessThanContainer(): boolean {\n    return this.slider.clientHeight >= this.slider.firstElementChild.clientHeight;\n  }\n\n  constructor(public slider: HTMLElement, public config: GalleryConfig) {\n    super(slider, config);\n  }\n\n  getClientSize(el: HTMLElement): number {\n    return el.clientHeight;\n  }\n\n  getOffsetSize(el: HTMLElement): number {\n    return el.offsetTop;\n  }\n\n  getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollToOptions {\n    const position = el.offsetTop - ((this.clientSize - el.clientHeight) / 2);\n    return {\n      top: position,\n      duration: behavior === 'smooth' ? this.config.slidingDuration : 0,\n      easing: this.config.slidingEase\n    };\n  }\n\n  getPanDelta(e): number {\n    return e.deltaY;\n  }\n\n  getPanVelocity(e): number {\n    return e.velocityY;\n  }\n\n  getCentralizerStartSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.firstElementChild?.clientHeight / 2);\n  }\n\n  getCentralizerEndSize(): number {\n    if (this.isContentLessThanContainer) {\n      const size = this.clientSize - this.slider.firstElementChild.clientHeight;\n      return size / 2;\n    }\n    return (this.clientSize / 2) - (this.slider.firstElementChild.lastElementChild?.clientHeight / 2);\n  }\n}\n","import { Observable, Subscriber } from 'rxjs';\n\nexport function resizeObservable(el: HTMLElement): Observable<ResizeObserverEntry[]> {\n  return new Observable((subscriber: Subscriber<ResizeObserverEntry[]>) => {\n    const resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => subscriber.next(entries));\n    resizeObserver.observe(el);\n    return function unsubscribe() {\n      resizeObserver.disconnect();\n    };\n  });\n}\n","export const imageFailedSvg = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"100\" height=\"100\" version=\"1.1\" viewBox=\"0 0 256 256\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n <g transform=\"translate(1.4066 1.4066) scale(2.81)\">\n\\t<path d=\"m74.453 48.627c-5.538 0-11.075-2.107-15.291-6.324-6.11-6.11-7.768-14.99-5.024-22.629h-48.08c-3.346 1e-3 -6.058 2.713-6.058 6.059v16.322l23.834 20.315c2.278 1.942 5.573 2.119 8.047 0.434l14.382-9.801c2.33-1.588 5.408-1.531 7.677 0.141l27.15 20.001v-25.574c-2.156 0.692-4.394 1.056-6.637 1.056z\" fill=\"#c1e5f4\" stroke-linecap=\"round\"/>\n <circle cx=\"27.942\" cy=\"37.942\" r=\"6.072\" fill=\"#fff0a9\"/>\n <path d=\"m85.446 16.02c-6.061-6.061-15.922-6.061-21.983 0s-6.061 15.923 0 21.984c3.031 3.031 7.011 4.546 10.992 4.546 3.98 0 7.962-1.515 10.992-4.545 2.936-2.937 4.553-6.841 4.553-10.993s-1.617-8.056-4.554-10.992zm-3.555 3.555c1.987 1.986 3.081 4.627 3.081 7.436 0 1.95-0.538 3.813-1.525 5.438l-14.428-14.428c4.043-2.442 9.384-1.934 12.872 1.554zm-14.873 14.874c-3.486-3.487-3.997-8.829-1.554-12.873l14.426 14.427c-4.043 2.443-9.385 1.932-12.872-1.554z\" fill=\"#e29393\" stroke-linecap=\"round\"/>\n <path d=\"m0 40.043v32.425c0 3.346 2.712 6.058 6.058 6.058h68.974c3.346 0 6.058-2.712 6.058-6.058v-1.335l-27.15-20.001c-2.27-1.672-5.348-1.729-7.677-0.141l-14.383 9.801c-2.473 1.686-5.769 1.508-8.047-0.434l-23.833-20.315z\" fill=\"#96ea9c\" stroke-linecap=\"round\"/>\n</g>\n</svg>\n`;\n\n","import {\n  Component,\n  Input,\n  Output,\n  HostBinding,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { imageFailedSvg } from './svg-assets';\n\n@Component({\n  selector: 'gallery-image',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('fadeIn', [\n      transition('* => success', [\n        style({ opacity: 0 }),\n        animate('300ms ease-in', style({ opacity: 1 }))\n      ])\n    ])\n  ],\n  template: `\n    <ng-container [ngSwitch]=\"state\">\n      <img [@fadeIn]=\"state\"\n           [src]=\"src\"\n           [attr.alt]=\"alt\"\n           [attr.loading]=\"loadingAttr\"\n           [style.visibility]=\"state === 'success' ? 'visible' : 'hidden'\"\n           class=\"g-image-item\"\n           (load)=\"state = 'success'; loaded.emit()\"\n           (error)=\"state = 'failed'; error.emit($event)\"/>\n\n      <div *ngSwitchCase=\"'failed'\"\n           class=\"g-image-error-message\">\n        <div *ngIf=\"errorTemplate; else defaultError\"\n             [innerHTML]=\"errorTemplate\"></div>\n        <ng-template #defaultError>\n          <ng-container *ngIf=\"isThumbnail; else isLarge\">\n            <h4>\n              <div class=\"gallery-thumb-error\" [innerHTML]=\"errorSvg\"></div>\n            </h4>\n          </ng-container>\n          <ng-template #isLarge>\n            <h2>\n              <div class=\"gallery-image-error\" [innerHTML]=\"errorSvg\"></div>\n            </h2>\n            <p>Unable to load the image!</p>\n          </ng-template>\n        </ng-template>\n      </div>\n\n      <ng-container *ngSwitchCase=\"'loading'\">\n        <div *ngIf=\"loaderTemplate; else defaultLoader\"\n             class=\"g-loading\"\n             [innerHTML]=\"loaderTemplate\">\n        </div>\n        <ng-template #defaultLoader>\n          <div *ngIf=\"isThumbnail\" class=\"g-thumb-loading\"></div>\n        </ng-template>\n      </ng-container>\n    </ng-container>\n  `\n})\n\nexport class GalleryImageComponent implements OnInit {\n\n  state: 'loading' | 'success' | 'failed' = 'loading';\n\n  /** Progress value */\n  progress: number = 0;\n\n  /** Is thumbnail */\n  @Input() isThumbnail: boolean;\n\n  /** Image loading attribute */\n  @Input() loadingAttr: 'eager' | 'lazy';\n\n  /** Image alt */\n  @Input() alt: string;\n\n  /** Image source URL */\n  @Input() src: string\n\n  /** Custom loader template */\n  @Input() loadingIcon: string;\n  /** Custom loader safe template */\n  loaderTemplate: SafeHtml;\n\n  /** Custom error template */\n  @Input() loadingError: string;\n  /** Custom error safe template */\n  errorTemplate: SafeHtml;\n\n  @Input() errorIcon: string = imageFailedSvg;\n  errorSvg: SafeHtml;\n\n  /** Stream that emits when an error occurs */\n  @Output() error = new EventEmitter<ErrorEvent>();\n\n  @Output() loaded = new EventEmitter<void>();\n\n  @HostBinding('attr.imageState') get imageState(): string {\n    return this.state;\n  }\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  ngOnInit() {\n    if (this.loadingIcon) {\n      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);\n    }\n    if (this.loadingError) {\n      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);\n    }\n    if (this.errorIcon) {\n      this.errorSvg = this._sanitizer.bypassSecurityTrustHtml(this.errorIcon);\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'gallery-video',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <video #video\n           [attr.mute]=\"mute\"\n           [attr.controlsList]=\"controlsList\"\n           [attr.disablePictureInPicture]=\"disablePictureInPicture\"\n           [disableRemotePlayback]=\"disableRemotePlayback\"\n           [controls]=\"controls\"\n           [loop]=\"loop\"\n           [poster]=\"poster\"\n           (error)=\"error.emit($event)\">\n      <ng-container *ngFor=\"let src of videoSources\">\n        <source *ngIf=\"src?.type; else noType\" [src]=\"src?.url\" [type]=\"src.type\"/>\n        <ng-template #noType>\n          <source [src]=\"src?.url\"/>\n        </ng-template>\n      </ng-container>\n    </video>\n  `\n})\nexport class GalleryVideoComponent implements OnInit {\n\n  videoSources: { url: string, type?: string }[];\n\n  @Input() src: string | { url: string, type?: string }[];\n  @Input() poster: string;\n  @Input() mute: boolean;\n  @Input() loop: boolean;\n  @Input() controls: boolean;\n  @Input() controlsList: 'nodownload' | 'nofullscreen' | 'noremoteplayback';\n  @Input() disableRemotePlayback: boolean;\n  @Input() disablePictureInPicture: boolean;\n\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\n    if (this.video.nativeElement) {\n      const video: HTMLVideoElement = this.video.nativeElement;\n      if (shouldPause && !video.paused) {\n        video.pause();\n      }\n    }\n  }\n\n  @Input('play') set playVideo(shouldPlay: boolean) {\n    if (this.video.nativeElement) {\n      const video: HTMLVideoElement = this.video.nativeElement;\n      if (shouldPlay) {\n        video.play();\n      }\n    }\n  }\n\n  /** Stream that emits when an error occurs */\n  @Output() error = new EventEmitter<ErrorEvent>();\n\n  @ViewChild('video', { static: true }) video: ElementRef;\n\n  ngOnInit() {\n    if (this.src instanceof Array) {\n      // If video has multiple sources\n      this.videoSources = [...this.src];\n    } else {\n      this.videoSources = [{ url: this.src }];\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'gallery-iframe',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <iframe *ngIf=\"autoplay; else default\"\n            #iframe\n            [attr.loading]=\"loadingAttr\"\n            allowfullscreen\n            allow\n            style=\"border:none\"\n            [src]=\"iframeSrc\">\n    </iframe>\n    <ng-template #default>\n      <iframe #iframe\n              [attr.loading]=\"loadingAttr\"\n              allowfullscreen\n              style=\"border:none\"\n              [src]=\"iframeSrc\">\n      </iframe>\n    </ng-template>\n  `\n})\nexport class GalleryIframeComponent {\n\n  iframeSrc: SafeResourceUrl;\n  videoSrc: string;\n\n  @Input('src') set src(src: string) {\n    this.videoSrc = src;\n    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(src);\n  }\n\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\n    if (this.iframe?.nativeElement) {\n      if (shouldPause) {\n        const iframe: HTMLIFrameElement = this.iframe.nativeElement;\n        iframe.src = null;\n\n        if (!this.autoplay && this.videoSrc) {\n          this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoSrc);\n        }\n      }\n    }\n  }\n\n  @Input() autoplay: boolean;\n\n  @Input() loadingAttr: 'eager' | 'lazy';\n\n  @ViewChild('iframe') iframe: ElementRef;\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewChecked,\n  ElementRef,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { GalleryConfig } from '../models/config.model';\nimport { LoadingStrategy, GalleryItemType } from '../models/constants';\nimport { GalleryItemData, ImageItemData, VideoItemData, YoutubeItemData } from './templates/items.model';\n\n@Component({\n  selector: 'gallery-item',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\n      <ng-container *ngSwitchCase=\"Types.Image\">\n\n        <gallery-image [src]=\"imageData.src\"\n                       [alt]=\"imageData.alt\"\n                       [loadingAttr]=\"config.loadingAttr\"\n                       [loadingIcon]=\"config.loadingIcon\"\n                       [loadingError]=\"config.loadingError\"\n                       (loaded)=\"onItemLoaded()\"\n                       (error)=\"error.emit($event)\"></gallery-image>\n\n        <div *ngIf=\"config.itemTemplate\" class=\"g-template g-item-template\">\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate; context: { index, type, data, isActive }\">\n          </ng-container>\n        </div>\n\n      </ng-container>\n\n      <gallery-video *ngSwitchCase=\"Types.Video\"\n                     [src]=\"videoData.src\"\n                     [mute]=\"videoData.mute\"\n                     [poster]=\"videoData.poster\"\n                     [controls]=\"videoData.controls\"\n                     [controlsList]=\"videoData.controlsList\"\n                     [disablePictureInPicture]=\"videoData.disablePictureInPicture\"\n                     [play]=\"isAutoPlay\"\n                     [pause]=\"currIndex !== index\"\n                     (error)=\"error.emit($event)\"></gallery-video>\n\n      <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\n                      [src]=\"youtubeSrc\"\n                      [autoplay]=\"isAutoPlay\"\n                      [loadingAttr]=\"config.loadingAttr\"\n                      [pause]=\"currIndex !== index\"></gallery-iframe>\n\n      <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\n                      [src]=\"data.src\"\n                      [loadingAttr]=\"config.loadingAttr\"></gallery-iframe>\n\n      <ng-container *ngSwitchDefault>\n\n        <div *ngIf=\"config.itemTemplate\" class=\"g-template g-item-template\">\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate; context: { index, type, data, isActive: isActive }\">\n          </ng-container>\n        </div>\n\n      </ng-container>\n    </ng-container>\n  `\n})\nexport class GalleryItemComponent implements AfterViewChecked {\n\n  readonly Types = GalleryItemType;\n\n  /** A flag that ensure that the height was emitted after tbe image is loaded, used only for gallery image types */\n  private imageLoadingState: 'IN_PROGRESS' | 'DONE' = 'IN_PROGRESS';\n\n  /** Gallery config */\n  @Input() config: GalleryConfig;\n\n  /** Item's index in the gallery */\n  @Input() index: number;\n\n  /** Gallery current index */\n  @Input() currIndex: number;\n\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\n  @Input() type: string;\n\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\n  @Input() data: GalleryItemData;\n\n  /** Stream that emits when an error occurs */\n  @Output() error = new EventEmitter<ErrorEvent>();\n\n  @HostBinding('class.g-active-item') get isActive(): boolean {\n    return this.index === this.currIndex;\n  }\n\n  @HostBinding('attr.galleryIndex') get isIndexAttr(): number {\n    return this.index;\n  }\n\n  @HostBinding('attr.imageState') get imageState(): 'IN_PROGRESS' | 'DONE' {\n    return this.imageLoadingState;\n  }\n\n  get element(): HTMLElement {\n    return this.el.nativeElement;\n  }\n\n  get isAutoPlay(): boolean {\n    if (this.isActive) {\n      if (this.type === GalleryItemType.Video || this.type === GalleryItemType.Youtube) {\n        return this.videoData.autoplay;\n      }\n    }\n  }\n\n  get youtubeSrc(): string {\n    let autoplay: 1 | 0 = 0;\n    if (this.isActive && this.type === GalleryItemType.Youtube && (this.data as YoutubeItemData).autoplay) {\n      autoplay = 1;\n    }\n    const url = new URL(this.data.src);\n    url.search = new URLSearchParams({\n      wmode: 'transparent',\n      ...(this.data as YoutubeItemData).params,\n      autoplay\n    }).toString();\n    return url.href;\n  }\n\n  get load(): boolean {\n    switch (this.config.loadingStrategy) {\n      case LoadingStrategy.Preload:\n        return true;\n      case LoadingStrategy.Lazy:\n        return this.currIndex === this.index;\n      default:\n        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;\n    }\n  }\n\n  get imageData(): ImageItemData {\n    return this.data;\n  }\n\n  get videoData(): VideoItemData {\n    return this.data;\n  }\n\n  constructor(private el: ElementRef, private cd: ChangeDetectorRef) {\n  }\n\n  ngAfterViewChecked(): void {\n    const height = this.getHeight();\n    this.element.style.setProperty('--g-item-width', `${ this.getWidth() }px`);\n    this.element.style.setProperty('--g-item-height', `${ height }px`);\n    if (this.currIndex === this.index) {\n      // Auto-height feature, only allowed when sliding direction is horizontal\n      const isThumbPositionHorizontal: boolean = this.config.thumbPosition === 'top' || this.config.thumbPosition === 'bottom';\n      if (this.config.autoHeight && height && isThumbPositionHorizontal) {\n        // Change slider height\n        this.element.parentElement.parentElement.style.height = `${ height }px`;\n      }\n    }\n  }\n\n  onItemLoaded(): void {\n    if (this.imageLoadingState === 'IN_PROGRESS') {\n      this.imageLoadingState = 'DONE';\n      // Detect changes to re-calculate item size\n      this.cd.detectChanges();\n    }\n  }\n\n  private getWidth(): number {\n    if (this.config.slidingDirection === 'horizontal') {\n      const firstElementChild: Element = this.element?.firstElementChild;\n      if (this.config.itemAutosize && this.imageLoadingState === 'DONE' && firstElementChild?.clientWidth) {\n        return firstElementChild.clientWidth;\n      }\n    }\n    return this.element.parentElement.parentElement.clientWidth;\n  }\n\n  private getHeight(): number {\n    const firstElementChild: Element = this.element.firstElementChild;\n    if (firstElementChild) {\n      if (this.config.autoHeight) {\n        if (this.imageLoadingState === 'DONE' && firstElementChild.clientHeight) {\n          return firstElementChild.clientHeight;\n        }\n      }\n      if (this.config.slidingDirection === 'vertical') {\n        if (this.config.itemAutosize && this.imageLoadingState === 'DONE' && firstElementChild.clientHeight) {\n          return firstElementChild.clientHeight;\n        }\n      }\n    }\n    return this.element.parentElement.parentElement.clientHeight;\n  }\n}\n\n","import { ElementRef, InjectionToken } from '@angular/core';\nimport { _Left, _Top, _XAxis, _YAxis } from '@angular/cdk/scrolling';\n\nexport const SMOOTH_SCROLL_OPTIONS = new InjectionToken<SmoothScrollOptions>('SMOOTH_SCROLL_OPTIONS');\n\nexport type SmoothScrollElement = HTMLElement | ElementRef<HTMLElement> | string;\n\nexport type SmoothScrollToOptions = _XAxis & _YAxis & SmoothScrollOptions;\n\nexport type SmoothScrollToElementOptions = _Top & _Left & SmoothScrollOptions;\n\nexport interface SmoothScrollOptions {\n  duration?: number;\n  easing?: BezierEasingOptions;\n}\n\nexport interface SmoothScrollStep {\n  scrollable: HTMLElement;\n  startTime: number;\n  startX: number;\n  startY: number;\n  x: number;\n  y: number;\n  duration: number;\n  easing: (k: number) => number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface BezierEasingOptions {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n","import { ElementRef, Inject, Injectable, PLATFORM_ID, Optional } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\nimport { _Bottom, _Left, _Right, _Top, _Without } from '@angular/cdk/scrolling';\nimport { fromEvent, merge, of, Observable, Subject, Subscriber } from 'rxjs';\nimport { expand, finalize, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport BezierEasing from 'bezier-easing';\nimport {\n  SMOOTH_SCROLL_OPTIONS,\n  SmoothScrollElement,\n  SmoothScrollStep,\n  SmoothScrollToElementOptions,\n  SmoothScrollToOptions\n} from './smooth-scroll.model';\n\n// @dynamic\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmoothScrollManager {\n\n  // Default options\n  private readonly _defaultOptions: SmoothScrollToOptions;\n\n  // Keeps track of the ongoing SmoothScroll functions, so they can be handled in case of duplication.\n  // Each scrolled element gets a destroyer stream which gets deleted immediately after it completes.\n  // Purpose: If user called a scroll function again on the same element before the scrolls completes,\n  // it cancels the ongoing scroll and starts a new one\n  private _onGoingScrolls = new Map<HTMLElement, Subject<void>>();\n\n  private get _w(): Window {\n    return this._document.defaultView;\n  }\n\n  /**\n   * Timing method\n   */\n  private get _now(): () => number {\n    return this._w.performance?.now?.bind(this._w.performance) || Date.now;\n  }\n\n  constructor(@Inject(DOCUMENT) private _document: Document,\n              @Inject(PLATFORM_ID) private _platform: object,\n              @Optional() @Inject(SMOOTH_SCROLL_OPTIONS) customDefaultOptions: SmoothScrollToOptions) {\n    this._defaultOptions = {\n      duration: 468,\n      easing: {\n        x1: 0.42,\n        y1: 0,\n        x2: 0.58,\n        y2: 1\n      },\n      ...customDefaultOptions,\n    };\n  }\n\n  /**\n   * changes scroll position inside an element\n   */\n  private _scrollElement(el: HTMLElement, x: number, y: number): void {\n    el.scrollLeft = x;\n    el.scrollTop = y;\n  }\n\n  /**\n   * Handles a given parameter of type HTMLElement, ElementRef or selector\n   */\n  private _getElement(el: HTMLElement | ElementRef | string, parent?: HTMLElement): HTMLElement {\n    if (typeof el === 'string') {\n      return (parent || this._document).querySelector(el);\n    }\n    return coerceElement<HTMLElement>(el);\n  }\n\n  /**\n   * Initializes a destroyer stream, re-initializes it if the element is already being scrolled\n   */\n  private _initSmoothScroll(el: HTMLElement): Subject<void> {\n    if (this._onGoingScrolls.has(el)) {\n      this._onGoingScrolls.get(el).next();\n    }\n    return this._onGoingScrolls.set(el, new Subject<void>()).get(el)!;\n  }\n\n  /**\n   * Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\n   */\n  private _isFinished(context: SmoothScrollStep, destroyed: Subject<void>, resolve: () => void): boolean {\n    if (context.currentX !== context.x || context.currentY !== context.y) {\n      return true;\n    }\n    destroyed.next();\n    resolve();\n    return false;\n  }\n\n  /**\n   * Terminates an ongoing smooth scroll\n   */\n  private _interrupted(el: HTMLElement, destroyed: Subject<void>): Observable<Event | void> {\n    return merge(\n      fromEvent(el, 'wheel', { passive: true, capture: true }),\n      fromEvent(el, 'touchmove', { passive: true, capture: true }),\n      destroyed\n    ).pipe(take(1));\n  }\n\n  /**\n   * Deletes the destroyer function, runs if the smooth scroll has finished or interrupted\n   */\n  private _destroy(el: HTMLElement, destroyed: Subject<void>): void {\n    destroyed.complete();\n    this._onGoingScrolls.delete(el);\n  }\n\n  /**\n   * A function called recursively that, given a context, steps through scrolling\n   */\n  private _step(context: SmoothScrollStep): Observable<SmoothScrollStep> {\n    return new Observable((subscriber: Subscriber<SmoothScrollStep>) => {\n      let elapsed = (this._now() - context.startTime) / context.duration;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      const value = context.easing(elapsed);\n\n      context.currentX = context.startX + (context.x - context.startX) * value;\n      context.currentY = context.startY + (context.y - context.startY) * value;\n\n      this._scrollElement(context.scrollable, context.currentX, context.currentY);\n      // Proceed to the step\n      requestAnimationFrame(() => subscriber.next(context));\n    });\n  }\n\n  private _applyScrollToOptions(el: HTMLElement, options: SmoothScrollToOptions): Promise<void> {\n    if (!options.duration) {\n      this._scrollElement(el, options.left, options.top);\n      return Promise.resolve();\n    }\n\n    // Initialize a destroyer stream, reinitialize it if the element is already being scrolled\n    const destroyed: Subject<void> = this._initSmoothScroll(el);\n\n    const context: SmoothScrollStep = {\n      scrollable: el,\n      startTime: this._now(),\n      startX: el.scrollLeft,\n      startY: el.scrollTop,\n      x: options.left == null ? el.scrollLeft : ~~options.left,\n      y: options.top == null ? el.scrollTop : ~~options.top,\n      duration: options.duration,\n      easing: BezierEasing(options.easing.x1, options.easing.y1, options.easing.x2, options.easing.y2)\n    };\n\n    return new Promise(resolve => {\n      // Scroll each step recursively\n      of(null).pipe(\n        expand(() => this._step(context).pipe(\n          takeWhile((currContext: SmoothScrollStep) => this._isFinished(currContext, destroyed, resolve))\n        )),\n        takeUntil(this._interrupted(el, destroyed)),\n        finalize(() => this._destroy(el, destroyed))\n      ).subscribe();\n    });\n  }\n\n  /**\n   * Dismiss an ongoing scroll\n   * @param el\n   */\n  dismissOngoingScroll(el: HTMLElement) {\n    this._onGoingScrolls.get(el)?.next();\n  }\n\n\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param scrollable element\n   * @param customOptions specified the offsets to scroll to.\n   */\n  scrollTo(scrollable: SmoothScrollElement, customOptions: SmoothScrollToOptions): Promise<void> {\n    if (isPlatformBrowser(this._platform)) {\n      const el = this._getElement(scrollable);\n      const isRtl = getComputedStyle(el).direction === 'rtl';\n      const rtlScrollAxisType = getRtlScrollAxisType();\n\n      const options: SmoothScrollToOptions = {\n        ...(this._defaultOptions as _Without<_Bottom & _Top>),\n        ...customOptions,\n        ...({\n          // Rewrite start & end offsets as right or left offsets.\n          left: customOptions.left == null ? (isRtl ? customOptions.end : customOptions.start) : customOptions.left,\n          right: customOptions.right == null ? (isRtl ? customOptions.start : customOptions.end) : customOptions.right\n        } as _Without<_Bottom & _Top>)\n      };\n\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        (options as _Without<_Bottom> & _Top).top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n\n      // Rewrite the right offset as a left offset.\n      if (isRtl && rtlScrollAxisType !== RtlScrollAxisType.NORMAL) {\n        if (options.left != null) {\n          (options as _Without<_Left> & _Right).right = el.scrollWidth - el.clientWidth - options.left;\n        }\n\n        if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n          options.left = options.right;\n        } else if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n          options.left = options.right ? -options.right : options.right;\n        }\n      } else {\n        if (options.right != null) {\n          (options as _Without<_Right> & _Left).left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      return this._applyScrollToOptions(el, options);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Scroll to element by reference or selector\n   */\n  scrollToElement(scrollable: SmoothScrollElement, target: SmoothScrollElement, customOptions: SmoothScrollToElementOptions = {}): Promise<void> {\n    const scrollableEl = this._getElement(scrollable);\n    const targetEl = this._getElement(target, scrollableEl);\n    const options: SmoothScrollToOptions = {\n      ...customOptions,\n      ...{\n        left: targetEl.offsetLeft + (customOptions.left || 0),\n        top: targetEl.offsetTop + (customOptions.top || 0)\n      }\n    };\n    return targetEl ? this.scrollTo(scrollableEl, options) : Promise.resolve();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  ViewChild,\n  ViewChildren,\n  SimpleChanges,\n  NgZone,\n  ElementRef,\n  QueryList,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  from,\n  distinctUntilChanged,\n  fromEvent,\n  mergeMap,\n  startWith,\n  EMPTY,\n  Observable,\n  Subject,\n  Subscriber,\n  animationFrameScheduler\n} from 'rxjs';\nimport { tap, debounceTime, filter, takeUntil, switchMap } from 'rxjs/operators';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryState, GalleryError } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\nimport { SlidingDirection, ThumbnailsView } from '../models/constants';\nimport { SliderAdapter, HorizontalAdapter, VerticalAdapter } from './adapters';\nimport { SmoothScrollManager } from '../smooth-scroll';\nimport { resizeObservable } from '../utils/resize-observer';\nimport { GalleryItemComponent } from './gallery-item.component';\n\ninterface ScrollObserver {\n  value: number;\n  behavior: ScrollBehavior;\n  onEnd: Function;\n}\n\ndeclare const Hammer: any;\n\n@Component({\n  selector: 'gallery-slider',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div #slider\n         class=\"g-slider\"\n         [attr.centralised]=\"config.itemAutosize\">\n      <div class=\"g-slider-content\">\n        <gallery-item *ngFor=\"let item of state.items; trackBy: trackByFn; index as i\"\n                      [attr.galleryId]=\"galleryId\"\n                      [type]=\"item.type\"\n                      [config]=\"config\"\n                      [data]=\"item.data\"\n                      [currIndex]=\"state.currIndex\"\n                      [index]=\"i\"\n                      (click)=\"itemClick.emit(i)\"\n                      (error)=\"error.emit({ itemIndex: i, error: $event })\">\n        </gallery-item>\n      </div>\n    </div>\n    <ng-content></ng-content>\n  `\n})\nexport class GallerySliderComponent implements OnInit, OnChanges, AfterViewInit, AfterViewChecked, OnDestroy {\n\n  readonly scrollHandler$: Subject<ScrollObserver> = new Subject<ScrollObserver>();\n\n  /** HammerJS instance */\n  private _hammer: any;\n\n  private intersectionObserver: IntersectionObserver;\n\n  private visibleElements: Map<Element, IntersectionObserverEntry> = new Map<Element, IntersectionObserverEntry>();\n\n  private readonly _destroyed$ = new Subject<void>();\n\n  private _isPanning: boolean;\n\n  /** Slider adapter */\n  adapter: SliderAdapter;\n\n  /** Gallery ID */\n  @Input() galleryId: string;\n\n  /** Gallery state */\n  @Input() state: GalleryState;\n\n  /** Gallery config */\n  @Input() config: GalleryConfig;\n\n  /** Stream that emits when item is clicked */\n  @Output() itemClick = new EventEmitter<number>();\n\n  /** Stream that emits when an error occurs */\n  @Output() error = new EventEmitter<GalleryError>();\n\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef;\n\n  @ViewChildren(GalleryItemComponent) items = new QueryList<GalleryItemComponent>();\n\n  get slider(): HTMLElement {\n    return this.sliderEl.nativeElement;\n  }\n\n  constructor(private _el: ElementRef,\n              private _cd: ChangeDetectorRef,\n              private _zone: NgZone,\n              private _platform: Platform,\n              private _smoothScroll: SmoothScrollManager,\n              private _gallery: Gallery) {\n\n    this.scrollHandler$.pipe(\n      debounceTime(0, animationFrameScheduler),\n      switchMap(({ value, behavior }: ScrollObserver) => {\n        this._gallery.debugConsole('[Gallery scrollHandler$] ', this.slider.style.scrollSnapType);\n        this.slider.style.scrollSnapType = 'unset';\n        const el: HTMLElement = this.items.get(value)?.element;\n\n        this._gallery.debugConsole('🤯 [Gallery scrollHandler$] scrollSnapType = unset, scrollTo element', !!el);\n        if (el) {\n          this.slider.classList.add('g-scrolling');\n          const pos = this.adapter.getScrollToValue(el, behavior || this.config.scrollBehavior);\n          const index: number = +this.items.get(value)?.element.getAttribute('galleryIndex');\n          this._gallery.debugConsole(`🚀 [Gallery scrollHandler$] Scroll start ===> index: ${ index }, position:`, pos);\n          this._gallery.debugConsole(`🚀 [Gallery scrollHandler$] slider scrollable`, this.adapter.scrollValue);\n\n          return from(this._smoothScroll.scrollTo(this.slider, pos)).pipe(\n            tap(() => {\n              // Reset viewport properties on scroll end\n              this._isPanning = false;\n              this.slider.classList.remove('g-scrolling');\n              this.slider.style.scrollSnapType = this.adapter.scrollSnapType;\n              this._gallery.debugConsole('✅ [Gallery scrollHandler$] Scroll end');\n            })\n          );\n        }\n        this._gallery.debugConsole('😡 [Gallery scrollHandler$] Scroll element was not found!');\n        return EMPTY;\n      }),\n      takeUntil(this._destroyed$)\n    ).subscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      if (changes.config.currentValue?.slidingDirection !== changes.config.previousValue?.slidingDirection) {\n        switch (this.config.slidingDirection) {\n          case SlidingDirection.Horizontal:\n            this.adapter = new HorizontalAdapter(this.slider, this.config);\n            break;\n          case SlidingDirection.Vertical:\n            this.adapter = new VerticalAdapter(this.slider, this.config);\n            break;\n        }\n\n        if (!changes.config.firstChange) {\n          requestAnimationFrame(() => {\n            // Keep the correct sliding position when direction changes\n            this.scrollToIndex(this.state.currIndex, 'auto');\n          });\n        }\n\n        // Reactivate gestures\n        this.enableDisableGestures();\n      }\n\n      if (!changes.config.firstChange) {\n        if (changes.config.currentValue?.mouseSlidingDisabled !== changes.config.previousValue?.mouseSlidingDisabled) {\n          this.enableDisableGestures();\n        }\n      }\n    }\n\n    // Scroll to current index\n    if (changes.state && changes.state.currentValue?.currIndex !== changes.state.previousValue?.currIndex) {\n      requestAnimationFrame(() => {\n        this.scrollToIndex(this.state.currIndex, changes.state.firstChange ? 'auto' : this.state.behavior);\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this._zone.runOutsideAngular(() => {\n\n      // We need to set the visibleElements in the viewport using intersection observer\n      this.createIntersectionObserver(this.slider).pipe(\n        tap((entry: IntersectionObserverEntry) => {\n          entry.target.classList.toggle('g-item-visible', entry.isIntersecting);\n          if (entry.isIntersecting) {\n            this.visibleElements.set(entry.target, entry);\n          } else {\n            this.visibleElements.delete(entry.target);\n          }\n        }),\n        takeUntil(this._destroyed$)\n      ).subscribe();\n\n      // Subscribe to slider scroll event\n      fromEvent(this.slider, 'scroll', { passive: true }).pipe(\n        debounceTime(50),\n        filter(() => !this._isPanning),\n        tap(() => this.onViewportScroll()),\n        takeUntil(this._destroyed$)\n      ).subscribe();\n\n      // Detect if the size of the slider has changed detecting current index on scroll\n      if (this._platform.isBrowser) {\n        resizeObservable(this._el.nativeElement).pipe(\n          debounceTime(this.config.resizeDebounceTime),\n          tap(([entry]: ResizeObserverEntry[]) => this.onHostResize(entry)),\n          takeUntil(this._destroyed$)\n        ).subscribe();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.items.notifyOnChanges();\n    this.items.changes.pipe(\n      startWith(null),\n      tap(() => {\n        // Disconnect all and reconnect later\n        this.visibleElements.forEach((item: IntersectionObserverEntry) => {\n          this.intersectionObserver.unobserve(item.target);\n        });\n\n        // Connect with the new items\n        this.items.toArray().map((item: GalleryItemComponent) => {\n          this.intersectionObserver.observe(item.element);\n        });\n      }),\n      takeUntil(this._destroyed$)\n    ).subscribe();\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.config.itemAutosize) {\n      this.slider.style.setProperty('--slider-centralize-start-size', this.adapter.getCentralizerStartSize() + 'px');\n      this.slider.style.setProperty('--slider-centralize-end-size', this.adapter.getCentralizerEndSize() + 'px');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    this.deactivateGestures();\n  }\n\n  trackByFn(index: number, item: any) {\n    return item.type;\n  }\n\n  private onHostResize(entry: ResizeObserverEntry): void {\n    const width: number = Math.ceil(entry.contentRect.width);\n    const height: number = Math.ceil(entry.contentRect.height);\n    this.slider.style.width = `${ width }px`;\n    this.slider.style.height = `${ height }px`;\n    this.scrollToIndex(this.state.currIndex, 'auto');\n    // Detect changes on gallery-item components to re-calculate item size\n    this._cd.detectChanges();\n    this._gallery.debugConsole('🦐 [Gallery OnHostResize]: set viewport width to absolute number');\n  }\n\n  private onViewportScroll(): void {\n    // Check if scrolled item is great enough to navigate\n    const currElement: Element = this.items.get(this.state.currIndex)?.element;\n    const elementAtCenter: Element = this.getElementFromViewportCenter();\n\n    if (elementAtCenter) {\n      // Check if the gallery-item element is not the active element\n      if (elementAtCenter !== currElement) {\n        this.tryScrollToElement(elementAtCenter as HTMLElement);\n      }\n    } else {\n      this._gallery.debugConsole('⁉ [Gallery onViewportScroll]: No center element was found');\n      this.visibleElements.forEach((entry: IntersectionObserverEntry) => {\n        this.tryScrollToElement(entry.target as HTMLElement);\n      });\n    }\n  }\n\n  private tryScrollToElement(elementAtCenter: HTMLElement): void {\n    const allowedMargin: number = 10;\n    const offsetDiff: number = (this.adapter.clientSize - this.adapter.getClientSize(elementAtCenter)) / 2;\n    const rangeStart: number = this.adapter.scrollValue + offsetDiff;\n    const rangeEnd: number = this.adapter.scrollValue + this.adapter.clientSize - offsetDiff;\n    const elStart: number = this.adapter.getOffsetSize(elementAtCenter);\n    const elEnd: number = elStart + this.adapter.getClientSize(elementAtCenter);\n\n    const isStart: boolean = rangeStart + allowedMargin >= elStart && rangeStart - allowedMargin <= elStart;\n    const isEnd: boolean = rangeEnd + allowedMargin >= elEnd && rangeEnd - allowedMargin <= elEnd;\n\n    // Reset position\n    this.slider.style.scrollSnapType = this.adapter.scrollSnapType;\n\n    // Check if element is within the detection range\n    if (isStart && isEnd) {\n      // If element is within the range set it as the active gallery item\n      this._gallery.debugConsole('🍄 [Gallery onViewportScroll]: Set active gallery item');\n\n      const index: number = +elementAtCenter.getAttribute('galleryIndex');\n      this._zone.run(() => this._gallery.ref(this.galleryId).set(index, 'smooth'));\n    }\n  }\n\n  private scrollToIndex(value: number, behavior: ScrollBehavior, onEnd?: () => void): void {\n    this.scrollHandler$.next({ value, behavior, onEnd });\n  }\n\n  private enableDisableGestures(): void {\n    // Enable/Disable mouse sliding on desktop browser only\n    if (!this._platform.IOS && !this._platform.ANDROID) {\n      if (!this.config.mouseSlidingDisabled) {\n        this.activateGestures();\n      } else {\n        this.deactivateGestures();\n      }\n    }\n  }\n\n  private activateGestures(): void {\n    if (typeof Hammer !== 'undefined') {\n      // Destroy hammer if a previous instance was created\n      this.deactivateGestures();\n\n      const direction: number = this.adapter.panDirection;\n\n      // Activate gestures\n      this._zone.runOutsideAngular(() => {\n        this._hammer = new Hammer(this._el.nativeElement, { inputClass: Hammer.MouseInput });\n        this._hammer.get('pan').set({ direction });\n\n        let panOffset: number;\n\n        // Set panOffset for sliding on pan start event\n        this._hammer.on('panstart', () => {\n          this._smoothScroll.dismissOngoingScroll(this.slider);\n          panOffset = this.adapter.scrollValue;\n          // Disable scroll-snap-type functionality\n          this.slider.style.scrollSnapType = 'unset';\n          this.slider.classList.add('g-sliding');\n          this._isPanning = true;\n        });\n\n        this._hammer.on('panmove', (e: any) => this.slider.scrollTo(this.adapter.getPanValue(panOffset, e, 'auto')));\n\n        this._hammer.on('panend', (e: any) => this.onPanEnd(e));\n      });\n    }\n  }\n\n  private deactivateGestures(): void {\n    this._hammer?.destroy();\n  }\n\n  protected onPanEnd(e): void {\n\n    this._gallery.debugConsole('🖱️ [Gallery]: onPanEnd', e);\n\n    this.slider.classList.remove('g-sliding');\n    const delta: number = this.adapter.getPanDelta(e);\n    const velocity: number = this.adapter.getPanVelocity(e);\n\n    const galleryRef = this._gallery.ref(this.galleryId);\n\n    this._zone.run(() => {\n      // Check if scrolled item is great enough to navigate\n      const currElement: Element = this.items.get(this.state.currIndex)?.element;\n\n      // Find the gallery item element in the center elements\n      const elementAtCenter: Element = this.getElementFromViewportCenter();\n\n      // Check if center item can be taken from element using\n      if (elementAtCenter && elementAtCenter !== currElement) {\n        const index: number = +elementAtCenter.getAttribute('galleryIndex');\n        this.scrollToIndex(index, 'smooth');\n        return;\n      }\n\n      // Check if delta is great enough to navigate\n      if (Math.abs(delta) > (currElement.clientWidth || this.adapter.clientSize) / 2) {\n        return delta > 0 ? galleryRef.prev('smooth', false) : galleryRef.next('smooth', false);\n      }\n\n      // Check if velocity is great enough to navigate\n      if (Math.abs(velocity) > 0.3) {\n        return velocity > 0 ? galleryRef.prev('smooth', false) : galleryRef.next('smooth', false);\n      }\n\n      // Reset position to the current index\n      this.scrollToIndex(this.state.currIndex, 'smooth');\n    });\n  }\n\n  private getElementFromViewportCenter(): Element {\n    // Get slider position relative to the document\n    const sliderRect = this.slider.getBoundingClientRect();\n    // Try look for the center item using `elementsFromPoint` function\n    const centerElements = document.elementsFromPoint(sliderRect.x + (sliderRect.width / 2), sliderRect.y + (sliderRect.height / 2));\n    // Find the gallery item element in the center elements\n    const element = centerElements.find((element: Element) => element.localName === 'gallery-item' && element.getAttribute('galleryId') === this.galleryId);\n\n    this._gallery.debugConsole('🪟 [Gallery]: getElementFromViewportCenter', element);\n    return element;\n  }\n\n  private createIntersectionObserver(slider: HTMLElement): Observable<IntersectionObserverEntry> {\n    return new Observable((observer: Subscriber<IntersectionObserverEntry[]>) => {\n      this.intersectionObserver = new IntersectionObserver(\n        (entries: IntersectionObserverEntry[]) => observer.next(entries),\n        { root: slider }\n      );\n      return () => this.intersectionObserver.disconnect();\n    }).pipe(\n      mergeMap((entries: IntersectionObserverEntry[]) => entries),\n      distinctUntilChanged(),\n    );\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { GalleryState } from '../models/gallery.model';\n\n@Component({\n  selector: 'gallery-counter',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"g-counter\">{{ (state.currIndex + 1) + ' / ' + state.items.length }}</div>\n  `\n})\nexport class GalleryCounterComponent {\n  @Input() state: GalleryState;\n}\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\nimport { GalleryConfig } from '../models/config.model';\n\n@Component({\n  selector: 'gallery-thumb',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <gallery-image [src]=\"data.thumb\"\n                   [alt]=\"data.alt + '-thumbnail'\"\n                   [isThumbnail]=\"true\"\n                   [loadingIcon]=\"config.thumbLoadingIcon\"\n                   [loadingError]=\"config.thumbLoadingError\"\n                   (error)=\"error.emit($event)\"></gallery-image>\n\n    <div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\n      <ng-container\n        *ngTemplateOutlet=\"config.thumbTemplate; context: { index, type, data, isActive }\">\n      </ng-container>\n    </div>\n  `\n})\nexport class GalleryThumbComponent {\n\n  @Input() config: GalleryConfig;\n\n  /** Item's index in the gallery */\n  @Input() index: number;\n\n  /** Gallery current index */\n  @Input() currIndex: number;\n\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\n  @Input() type: string;\n\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\n  @Input() data: any;\n\n  @Output() error = new EventEmitter<ErrorEvent>();\n\n  @HostBinding('class.g-active-thumb') get isActive() {\n    return this.index === this.currIndex;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  NgZone,\n  ElementRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ViewChildren,\n  QueryList\n} from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil, tap } from 'rxjs/operators';\nimport { GalleryConfig } from '../models/config.model';\nimport { GalleryState, GalleryError } from '../models/gallery.model';\nimport { ThumbnailsPosition, ThumbnailsView } from '../models/constants';\nimport { ThumbSliderAdapter, HorizontalThumbAdapter, VerticalThumbAdapter } from './adapters';\nimport { SmoothScrollManager } from '../smooth-scroll';\nimport { resizeObservable } from '../utils/resize-observer';\nimport { GalleryThumbComponent } from './gallery-thumb.component';\n\ndeclare const Hammer: any;\n\n@Component({\n  selector: 'gallery-thumbs',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div #slider\n         class=\"g-slider\"\n         [attr.centralised]=\"config.thumbView === thumbnailsView.Contain || adapter.isContentLessThanContainer\">\n      <div class=\"g-slider-content\">\n        <gallery-thumb *ngFor=\"let item of state.items; trackBy: trackByFn; index as i\"\n                       [type]=\"item.type\"\n                       [config]=\"config\"\n                       [data]=\"item.data\"\n                       [currIndex]=\"state.currIndex\"\n                       [index]=\"i\"\n                       (click)=\"config.disableThumb ? null : thumbClick.emit(i)\"\n                       (error)=\"error.emit({ itemIndex: i, error: $event })\">\n        </gallery-thumb>\n      </div>\n    </div>\n  `\n})\nexport class GalleryThumbsComponent implements AfterViewInit, AfterViewChecked, OnChanges, OnDestroy {\n\n  /** HammerJS instance */\n  private _hammer: any;\n\n  /** Thumbnails view enum */\n  readonly thumbnailsView = ThumbnailsView;\n\n  private readonly _destroyed$ = new Subject<void>();\n\n  /** Slider adapter */\n  adapter: ThumbSliderAdapter;\n\n  /** Gallery state */\n  @Input() state: GalleryState;\n\n  /** Gallery config */\n  @Input() config: GalleryConfig;\n\n  /** Stream that emits when thumb is clicked */\n  @Output() thumbClick = new EventEmitter<number>();\n\n  /** Stream that emits when an error occurs */\n  @Output() error = new EventEmitter<GalleryError>();\n\n  /** Slider ElementRef */\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef;\n\n  @ViewChildren(GalleryThumbComponent, { read: ElementRef }) items = new QueryList<ElementRef>();\n\n  get slider(): HTMLElement {\n    return this.sliderEl.nativeElement;\n  }\n\n  constructor(private _el: ElementRef,\n              private _zone: NgZone,\n              private _smoothScroll: SmoothScrollManager,\n              private _cd: ChangeDetectorRef,\n              private _platform: Platform) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.config) {\n      // Sets sliding direction\n      if (changes.config.currentValue?.thumbPosition !== changes.config.previousValue?.thumbPosition) {\n        switch (this.config.thumbPosition) {\n          case ThumbnailsPosition.Right:\n          case ThumbnailsPosition.Left:\n            this.adapter = new VerticalThumbAdapter(this.slider, this.config);\n            break;\n          case ThumbnailsPosition.Top:\n          case ThumbnailsPosition.Bottom:\n            this.adapter = new HorizontalThumbAdapter(this.slider, this.config);\n            break;\n        }\n\n        if (!changes.config.firstChange) {\n          // Keep the correct sliding position when direction changes\n          requestAnimationFrame(() => {\n            this.scrollToIndex(this.state.currIndex, 'auto');\n          });\n        }\n\n        // Reactivate gestures\n        this.enableDisableGestures();\n      }\n\n      if (!changes.config.firstChange && changes.config.currentValue?.thumbMouseSlidingDisabled !== changes.config.previousValue?.thumbMouseSlidingDisabled) {\n        this.enableDisableGestures();\n      }\n\n      this.slider.style.setProperty('--thumb-height', `${ this.config.thumbHeight }px`);\n      this.slider.style.setProperty('--thumb-width', `${ this.config.thumbWidth }px`);\n    }\n\n    if (changes.state && (changes.state.firstChange || !this.config.thumbDetached)) {\n      if (changes.state.currentValue?.currIndex !== changes.state.previousValue?.currIndex) {\n        // Scroll slide to item when current index changes.\n        requestAnimationFrame(() => {\n          this.scrollToIndex(this.state.currIndex, changes.state?.firstChange ? 'auto' : 'smooth');\n        });\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // Workaround: opening a lightbox (centralised) with last index active, show in wrong position\n    setTimeout(() => this.scrollToIndex(this.state.currIndex, 'auto'), 200);\n\n    this._zone.runOutsideAngular(() => {\n      // Update necessary calculation on host resize\n      if (this._platform.isBrowser) {\n        resizeObservable(this._el.nativeElement).pipe(\n          debounceTime(this.config.resizeDebounceTime),\n          tap(() => {\n            // Update thumb centralize size\n            const el: HTMLElement = this.items.get(this.state.currIndex)?.nativeElement;\n            if (el) {\n              this.slider.style.setProperty('--thumb-centralize-start-size', this.adapter.getCentralizerStartSize() + 'px');\n              this.slider.style.setProperty('--thumb-centralize-end-size', this.adapter.getCentralizerEndSize() + 'px');\n            }\n            this._cd.detectChanges();\n            this.scrollToIndex(this.state.currIndex, 'auto');\n          }),\n          takeUntil(this._destroyed$)\n        ).subscribe();\n      }\n    });\n  }\n\n  ngAfterViewChecked(): void {\n    const el: HTMLElement = this.items.get(this.state.currIndex)?.nativeElement;\n    if (el) {\n      this.slider.style.setProperty('--thumb-centralize-start-size', this.adapter.getCentralizerStartSize() + 'px');\n      this.slider.style.setProperty('--thumb-centralize-end-size', this.adapter.getCentralizerEndSize() + 'px');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.deactivateGestures();\n    this._destroyed$.next();\n    this._destroyed$.complete();\n  }\n\n  trackByFn(index: number, item: any) {\n    return item.type;\n  }\n\n  private scrollToIndex(value: number, behavior: ScrollBehavior): void {\n    this._zone.runOutsideAngular(() => {\n      this.slider.style.scrollSnapType = 'unset';\n\n      const el: HTMLElement = this.items.get(value)?.nativeElement;\n      if (el) {\n        this._smoothScroll.scrollTo(this.slider, this.adapter.getScrollToValue(el, behavior)).then(() => {\n          this.slider.style.scrollSnapType = this.adapter.scrollSnapType;\n        });\n      }\n    });\n  }\n\n  private enableDisableGestures(): void {\n    if (!this._platform.IOS && !this._platform.ANDROID) {\n      // Enable/Disable mouse sliding on desktop browser only\n      if (!this.config.thumbMouseSlidingDisabled) {\n        this.activateGestures();\n      } else {\n        this.deactivateGestures();\n      }\n    }\n  }\n\n  private activateGestures(): void {\n    if (typeof Hammer !== 'undefined' && !this.config.disableThumb) {\n\n      const direction: number = this.adapter.panDirection;\n\n      // Activate gestures\n      this._zone.runOutsideAngular(() => {\n        this._hammer = new Hammer(this._el.nativeElement, { inputClass: Hammer.MouseInput });\n        this._hammer.get('pan').set({ direction });\n\n        let panOffset: number = 0;\n\n        this._hammer.on('panstart', () => {\n          panOffset = this.adapter.scrollValue;\n          // Disable scroll-snap-type functionality\n          this.slider.style.scrollSnapType = 'unset';\n          this.slider.classList.add('g-sliding');\n        });\n        this._hammer.on('panmove', (e) => this.slider.scrollTo(this.adapter.getPanValue(panOffset, e, 'auto')));\n        this._hammer.on('panend', () => {\n          // Enable scroll-snap-type functionality\n          this.slider.style.scrollSnapType = this.adapter.scrollSnapType;\n          this.slider.classList.remove('g-sliding');\n        });\n      });\n    }\n  }\n\n  private deactivateGestures(): void {\n    this._hammer?.destroy();\n  }\n}\n","import { Component, Input, Output, HostBinding, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\nimport { GalleryError, GalleryState } from '../models/gallery.model';\nimport { GalleryConfig } from '../models/config.model';\n\n@Component({\n  selector: 'gallery-core',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <gallery-thumbs *ngIf=\"config.thumb\"\n                    [state]=\"state\"\n                    [config]=\"config\"\n                    (thumbClick)=\"thumbClick.emit($event)\"\n                    (error)=\"error.emit($event)\">\n    </gallery-thumbs>\n\n    <div class=\"g-box\">\n      <gallery-slider [state]=\"state\"\n                      [config]=\"config\"\n                      [galleryId]=\"galleryId\"\n                      (itemClick)=\"itemClick.emit($event)\"\n                      (error)=\"error.emit($event)\">\n\n        <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\n                     [state]=\"state\"\n                     [config]=\"config\"\n                     [galleryId]=\"galleryId\">\n        </gallery-nav>\n\n      </gallery-slider>\n\n      <gallery-dots *ngIf=\"config.dots\"\n                    [state]=\"state\"\n                    [config]=\"config\"\n                    [galleryId]=\"galleryId\">\n      </gallery-dots>\n\n      <gallery-counter *ngIf=\"config.counter\"\n                       [state]=\"state\">\n      </gallery-counter>\n\n      <div class=\"g-box-template\">\n        <ng-container *ngTemplateOutlet=\"config.boxTemplate; context: { state: state, config: config }\"></ng-container>\n      </div>\n    </div>\n  `\n})\nexport class GalleryCoreComponent {\n\n  @Input() galleryId: string;\n  @Input() state: GalleryState;\n  @Input() config: GalleryConfig;\n  @Output() itemClick = new EventEmitter<number>();\n  @Output() thumbClick = new EventEmitter<number>();\n  @Output() error = new EventEmitter<GalleryError>();\n\n  /** Set thumbnails position */\n  @HostBinding('attr.thumbPosition') get thumbPosition(): 'top' | 'left' | 'right' | 'bottom' {\n    return this.config.thumbPosition;\n  }\n\n  /** Set sliding direction */\n  @HostBinding('attr.slidingDirection') get slidingDirection(): 'horizontal' | 'vertical' {\n    return this.config.slidingDirection;\n  }\n\n  /** Disable thumbnails clicks */\n  @HostBinding('attr.disableThumb') get disableThumb(): boolean {\n    return this.config.disableThumb;\n  }\n\n  /** Set gallery image size */\n  @HostBinding('attr.imageSize') get imageSize(): 'cover' | 'contain' {\n    return this.config.imageSize;\n  }\n\n  @HostBinding('attr.thumbImageSize') get thumbImageSize(): 'contain' | 'cover' {\n    return this.config.thumbImageSize;\n  }\n\n  /** Set gallery dots position */\n  @HostBinding('attr.dotsPosition') get dotsPosition(): 'top' | 'bottom' {\n    return this.config.dotsPosition;\n  }\n\n  /** Set gallery counter position */\n  @HostBinding('attr.counterPosition') get counterPosition(): 'top' | 'bottom' {\n    return this.config.counterPosition;\n  }\n\n  /** Set gallery counter position */\n  @HostBinding('attr.slidingDisabled') get slidingDisabled(): boolean {\n    return this.config.slidingDisabled;\n  }\n\n  /** Set gallery counter position */\n  @HostBinding('attr.thumbSlidingDisabled') get thumbSlidingDisabled(): boolean {\n    return this.config.thumbSlidingDisabled;\n  }\n\n  /** Set gallery slider itemAutosize style  */\n  @HostBinding('attr.itemAutosize') get itemAutosize(): boolean {\n    return this.config.itemAutosize;\n  }\n\n  /** Set gallery slider autoHeight style  */\n  @HostBinding('attr.autoHeight') get autoHeight(): boolean {\n    return this.config.autoHeight;\n  }\n\n  /** Set gallery slider thumbAutosize style  */\n  @HostBinding('attr.thumbAutosize') get thumbAutosize(): boolean {\n    return this.config.thumbAutosize;\n  }\n\n  /** Set debug style  */\n  @HostBinding('attr.debug') get debug(): boolean {\n    return this.config.debug;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Subscription, SubscriptionLike } from 'rxjs';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryRef } from '../services/gallery-ref';\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\nimport { IframeItemData, ImageItemData, VideoItemData, YoutubeItemData } from './templates/items.model';\nimport { GalleryConfig } from '../models/config.model';\nimport { BezierEasingOptions } from '../smooth-scroll';\n\n@Component({\n  selector: 'gallery',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../styles/gallery.scss'],\n  template: `\n    <gallery-core [galleryId]=\"id\"\n                  [state]=\"galleryRef.state | async\"\n                  [config]=\"galleryRef.config | async\"\n                  (itemClick)=\"onItemClick($event)\"\n                  (thumbClick)=\"onThumbClick($event)\"\n                  (error)=\"onError($event)\"></gallery-core>\n  `\n})\nexport class GalleryComponent implements OnInit, OnChanges, OnDestroy {\n\n  galleryRef: GalleryRef;\n  @Input() id: string;\n  @Input() items: GalleryItem [];\n  @Input() nav: boolean = this._gallery.config.nav;\n  @Input() dots: boolean = this._gallery.config.dots;\n  @Input() loop: boolean = this._gallery.config.loop;\n  @Input() debug: boolean = this._gallery.config.debug;\n  @Input() thumb: boolean = this._gallery.config.thumb;\n  @Input() counter: boolean = this._gallery.config.counter;\n  @Input() dotsSize: number = this._gallery.config.dotsSize;\n  @Input() autoPlay: boolean = this._gallery.config.autoPlay;\n  @Input() thumbWidth: number = this._gallery.config.thumbWidth;\n  @Input() thumbHeight: number = this._gallery.config.thumbHeight;\n  @Input() disableThumb: boolean = this._gallery.config.disableThumb;\n  @Input() scrollBehavior: ScrollBehavior = this._gallery.config.scrollBehavior;\n  @Input() navScrollBehavior: ScrollBehavior = this._gallery.config.navScrollBehavior;\n  @Input() slidingDisabled: boolean = this._gallery.config.slidingDisabled;\n  @Input() thumbSlidingDisabled: boolean = this._gallery.config.thumbSlidingDisabled;\n  @Input() mouseSlidingDisabled: boolean = this._gallery.config.mouseSlidingDisabled;\n  @Input() thumbMouseSlidingDisabled: boolean = this._gallery.config.thumbMouseSlidingDisabled;\n  @Input() playerInterval: number = this._gallery.config.playerInterval;\n  @Input() slidingDuration: number = this._gallery.config.slidingDuration;\n  @Input() slidingEase: BezierEasingOptions = this._gallery.config.slidingEase;\n  @Input() boxTemplate: TemplateRef<any> = this._gallery.config.boxTemplate;\n  @Input() itemTemplate: TemplateRef<any> = this._gallery.config.itemTemplate;\n  @Input() thumbTemplate: TemplateRef<any> = this._gallery.config.thumbTemplate;\n  @Input() resizeDebounceTime: number = this._gallery.config.resizeDebounceTime;\n  @Input() imageSize: 'cover' | 'contain' = this._gallery.config.imageSize;\n  @Input() thumbImageSize: 'cover' | 'contain' = this._gallery.config.thumbImageSize;\n  @Input() dotsPosition: 'top' | 'bottom' = this._gallery.config.dotsPosition;\n  @Input() counterPosition: 'top' | 'bottom' = this._gallery.config.counterPosition;\n  @Input() slidingDirection: 'horizontal' | 'vertical' = this._gallery.config.slidingDirection;\n  @Input() loadingAttr: 'eager' | 'lazy' = this._gallery.config.loadingAttr;\n  @Input() loadingStrategy: 'preload' | 'lazy' | 'default' = this._gallery.config.loadingStrategy;\n  @Input() thumbPosition: 'top' | 'left' | 'right' | 'bottom' = this._gallery.config.thumbPosition;\n  @Input() thumbView: 'default' | 'contain' = this._gallery.config.thumbView;\n  @Input() thumbDetached: boolean = this._gallery.config.thumbDetached;\n  @Input() thumbAutosize: boolean = this._gallery.config.thumbAutosize;\n  @Input() itemAutosize: boolean = this._gallery.config.itemAutosize;\n  @Input() autoHeight: boolean = this._gallery.config.autoHeight;\n\n  // Inputs used by the lightbox\n\n  /** Destroy gallery ref on component destroy event */\n  @Input() destroyRef = true;\n\n  /** Skip initializing the config with components inputs (Lightbox mode) */\n  @Input() skipInitConfig = false;\n\n  @Output() itemClick = new EventEmitter<number>();\n  @Output() thumbClick = new EventEmitter<number>();\n  @Output() playingChange = new EventEmitter<GalleryState>();\n  @Output() indexChange = new EventEmitter<GalleryState>();\n  @Output() itemsChange = new EventEmitter<GalleryState>();\n  @Output() error = new EventEmitter<GalleryError>();\n\n  private _itemClick$: SubscriptionLike = Subscription.EMPTY;\n  private _thumbClick$: SubscriptionLike = Subscription.EMPTY;\n  private _itemChange$: SubscriptionLike = Subscription.EMPTY;\n  private _indexChange$: SubscriptionLike = Subscription.EMPTY;\n  private _playingChange$: SubscriptionLike = Subscription.EMPTY;\n  private _playerListener$: SubscriptionLike = Subscription.EMPTY;\n\n  constructor(private _gallery: Gallery) {\n  }\n\n  private getConfig(): GalleryConfig {\n    return {\n      nav: this.nav,\n      dots: this.dots,\n      loop: this.loop,\n      debug: this.debug,\n      thumb: this.thumb,\n      counter: this.counter,\n      autoPlay: this.autoPlay,\n      dotsSize: this.dotsSize,\n      imageSize: this.imageSize,\n      thumbImageSize: this.thumbImageSize,\n      scrollBehavior: this.scrollBehavior,\n      navScrollBehavior: this.navScrollBehavior,\n      thumbView: this.thumbView,\n      thumbWidth: this.thumbWidth,\n      thumbHeight: this.thumbHeight,\n      slidingEase: this.slidingEase,\n      disableThumb: this.disableThumb,\n      dotsPosition: this.dotsPosition,\n      boxTemplate: this.boxTemplate,\n      loadingAttr: this.loadingAttr,\n      itemTemplate: this.itemTemplate,\n      thumbTemplate: this.thumbTemplate,\n      thumbDetached: this.thumbDetached,\n      thumbPosition: this.thumbPosition,\n      playerInterval: this.playerInterval,\n      counterPosition: this.counterPosition,\n      loadingStrategy: this.loadingStrategy,\n      slidingDuration: this.slidingDuration,\n      slidingDirection: this.slidingDirection,\n      resizeDebounceTime: this.resizeDebounceTime,\n      slidingDisabled: this.slidingDisabled,\n      thumbSlidingDisabled: this.thumbSlidingDisabled,\n      mouseSlidingDisabled: this.mouseSlidingDisabled,\n      thumbMouseSlidingDisabled: this.thumbMouseSlidingDisabled,\n      thumbAutosize: this.thumbAutosize,\n      itemAutosize: this.itemAutosize,\n      autoHeight: this.autoHeight,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.galleryRef) {\n      this.galleryRef.setConfig(this.getConfig());\n\n      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {\n        this.load(this.items);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    // Get gallery instance by id\n    if (this.skipInitConfig) {\n      this.galleryRef = this._gallery.ref(this.id);\n    } else {\n      this.galleryRef = this._gallery.ref(this.id, this.getConfig());\n    }\n\n    // Load gallery items\n    this.load(this.items);\n\n    // Activate player listener\n    this._playerListener$ = this.galleryRef.activatePlayer().subscribe();\n\n    // Subscribes to events on demand\n    if (this.indexChange.observed) {\n      this._indexChange$ = this.galleryRef.indexChanged.subscribe((state: GalleryState) => this.indexChange.emit(state));\n    }\n    if (this.itemsChange.observed) {\n      this._itemChange$ = this.galleryRef.itemsChanged.subscribe((state: GalleryState) => this.itemsChange.emit(state));\n    }\n    if (this.playingChange.observed) {\n      this._playingChange$ = this.galleryRef.playingChanged.subscribe((state: GalleryState) => this.playingChange.emit(state));\n    }\n\n    // Start playing if autoplay is set to true\n    if (this.autoPlay) {\n      this.play();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._itemClick$.unsubscribe();\n    this._thumbClick$.unsubscribe();\n    this._itemChange$.unsubscribe();\n    this._indexChange$.unsubscribe();\n    this._playingChange$.unsubscribe();\n    this._playerListener$.unsubscribe();\n    if (this.destroyRef) {\n      this.galleryRef.destroy();\n    }\n  }\n\n  onItemClick(i: number): void {\n    this.itemClick.emit(i);\n    this.galleryRef.itemClick.next(i);\n  }\n\n  onThumbClick(i: number): void {\n    this.galleryRef.set(i);\n    this.thumbClick.emit(i);\n    this.galleryRef.thumbClick.next(i);\n  }\n\n  onError(err: GalleryError): void {\n    this.error.emit(err);\n    this.galleryRef.error.next(err);\n  }\n\n  load(items: GalleryItem[]): void {\n    this.galleryRef.load(items);\n  }\n\n  add(item: GalleryItem, active?: boolean): void {\n    this.galleryRef.add(item, active);\n  }\n\n  addImage(data: ImageItemData, active?: boolean): void {\n    this.galleryRef.addImage(data, active);\n  }\n\n  addVideo(data: VideoItemData, active?: boolean): void {\n    this.galleryRef.addVideo(data, active);\n  }\n\n  addIframe(data: IframeItemData, active?: boolean): void {\n    this.galleryRef.addIframe(data, active);\n  }\n\n  addYoutube(data: YoutubeItemData, active?: boolean): void {\n    this.galleryRef.addYoutube(data, active);\n  }\n\n  remove(i: number): void {\n    this.galleryRef.remove(i);\n  }\n\n  next(behavior?: ScrollBehavior, loop?: boolean): void {\n    this.galleryRef.next(behavior, loop);\n  }\n\n  prev(behavior?: ScrollBehavior, loop?: boolean): void {\n    this.galleryRef.prev(behavior, loop);\n  }\n\n  set(i: number, behavior?: ScrollBehavior): void {\n    this.galleryRef.set(i, behavior);\n  }\n\n  reset(): void {\n    this.galleryRef.reset();\n  }\n\n  play(interval?: number): void {\n    this.galleryRef.play(interval);\n  }\n\n  stop(): void {\n    this.galleryRef.stop();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlatformModule } from '@angular/cdk/platform';\n\nimport { GalleryConfig, GALLERY_CONFIG } from './models/config.model';\n\nimport { GalleryComponent } from './components/gallery.component';\nimport { GalleryNavComponent } from './components/gallery-nav.component';\nimport { GalleryCoreComponent } from './components/gallery-core.component';\nimport { GalleryDotsComponent } from './components/gallery-dots.component';\nimport { GalleryThumbsComponent } from './components/gallery-thumbs.component';\nimport { GallerySliderComponent } from './components/gallery-slider.component';\nimport { GalleryCounterComponent } from './components/gallery-counter.component';\n\nimport { GalleryItemComponent } from './components/gallery-item.component';\nimport { GalleryThumbComponent } from './components/gallery-thumb.component';\nimport { GalleryImageComponent } from './components/templates/gallery-image.component';\nimport { GalleryVideoComponent } from './components/templates/gallery-video.component';\nimport { GalleryIframeComponent } from './components/templates/gallery-iframe.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PlatformModule\n  ],\n  declarations: [\n    GalleryComponent,\n    GalleryNavComponent,\n    GalleryDotsComponent,\n    GalleryCoreComponent,\n    GallerySliderComponent,\n    GalleryCounterComponent,\n    GalleryThumbsComponent,\n    GalleryThumbComponent,\n    GalleryItemComponent,\n    GalleryImageComponent,\n    GalleryVideoComponent,\n    GalleryIframeComponent\n  ],\n  exports: [\n    GalleryComponent\n  ]\n})\nexport class GalleryModule {\n  static withConfig(config: GalleryConfig): ModuleWithProviders<GalleryModule> {\n\n    return {\n      ngModule: GalleryModule,\n      providers: [\n        {\n          provide: GALLERY_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.Gallery","i2","i3","i1","i2.GalleryImageComponent","i3.GalleryVideoComponent","i4.GalleryIframeComponent","i2.SmoothScrollManager","i3.Gallery","i4","i5.GalleryItemComponent","i1.SmoothScrollManager","i4.GalleryThumbComponent","i2.GalleryNavComponent","i3.GalleryDotsComponent","i4.GallerySliderComponent","i5.GalleryCounterComponent","i6.GalleryThumbsComponent","i2.GalleryCoreComponent"],"mappings":"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"}